  /* COLOSSAL : COLOSSAL CAVE PLAYING PROGRAM FOR CMS */                COL00010
1                                                                       COL00020
 /* (SUBSCRIPTRANGE,STRINGRANGE):  */                                   COL00030
 COLOSSAL: PROC OPTIONS (MAIN);                                         COL00040
                                                                        COL00050
      DCL                                                               COL00060
          FN  CHAR(8)  INIT('ADVENTUR') ,   /* FILENAME  ...    */      COL00070
                                                                        COL00080
          FT  CHAR(8)  INIT('SAVEFILE') ,   /* FILETYPE  ... &  */      COL00090
          FM  CHAR(8)  INIT('A       ') ,   /* FILEMODE OF ...  */      COL00100
                                            /* ENCODED DATABASE */      COL00110
          FN2   CHAR(133) INIT(' ') ;                                   COL00120
                                                                        COL00130
       DCL (IRC,FNLEN)   FIXED BIN(31) ;                                COL00140
                                                                        COL00150
       DCL SAVEFL ENTRY (CHAR(8),CHAR(8),CHAR(8),                       COL00160
               FIXED BIN(31),FIXED BIN(31),                             COL00170
               FIXED BIN(31),FIXED BIN(31),                             COL00180
               FIXED BIN(31),FIXED BIN(31),                             COL00190
               FIXED BIN(31),FIXED BIN(31),                             COL00200
               FIXED BIN(31),FIXED BIN(31),                             COL00210
               FIXED BIN(31),FIXED BIN(31),                             COL00220
               FIXED BIN(31),FIXED BIN(31),                             COL00230
               FIXED BIN(31),FIXED BIN(31),                             COL00240
               FIXED BIN(31)                                            COL00250
               ) OPTIONS (ASM INTER);                                   COL00260
                                                                        COL00270
       DCL GETFL ENTRY (CHAR(8),CHAR(8),CHAR(8),                        COL00280
               FIXED BIN(31),FIXED BIN(31),                             COL00290
               FIXED BIN(31),FIXED BIN(31),                             COL00300
               FIXED BIN(31),FIXED BIN(31),                             COL00310
               FIXED BIN(31),FIXED BIN(31),                             COL00320
               FIXED BIN(31),FIXED BIN(31),                             COL00330
               FIXED BIN(31),FIXED BIN(31),                             COL00340
               FIXED BIN(31),FIXED BIN(31),                             COL00350
               FIXED BIN(31),FIXED BIN(31),                             COL00360
               FIXED BIN(31)                                            COL00370
               ) OPTIONS (ASM INTER);                                   COL00380
                                                                        COL00390
       DCL TREAD ENTRY (CHAR(133),FIXED BIN(31),CHAR(133),              COL00400
               FIXED BIN(31),FIXED BIN(31)) OPTIONS (ASM INTER);        COL00410
                                                                        COL00420
       DCL TWRITE ENTRY (CHAR(133),FIXED BIN(31),FIXED BIN(31))         COL00430
               OPTIONS (ASM INTER);                                     COL00440
                                                                        COL00450
       DCL RANDU ENTRY (FIXED BIN(31),FIXED BIN(31),FLOAT BIN(31))      COL00460
               OPTIONS (ASM INTER);                                     COL00470
                                                                        COL00480
       DCL ITIME ENTRY (FIXED BIN(31)) OPTIONS (ASM INTER);             COL00490
                                                                        COL00500
         DCL 1 TXTCOM STATIC,                                           COL00510
               2 RTEXT(205) FIXED BIN(31),                              COL00520
               2 LINES(9650) CHAR(5);                                   COL00530
                                                                        COL00540
         DCL 1 BLKCOM STATIC,                                           COL00550
               2 BLKLIN BIT(1) INIT ('1'B);                             COL00560
                                                                        COL00570
         DCL 1 PTXCOM STATIC,                                           COL00580
               2 PTEXT(100) FIXED BIN(31);                              COL00590
                                                                        COL00600
         DCL 1 VOCCOM STATIC,                                           COL00610
               2 KTAB(300) FIXED BIN(31),                               COL00620
               2 ATAB(300) CHAR(5),                                     COL00630
               2 TABSIZ FIXED BIN(31) INIT(300);                        COL00640
                                                                        COL00650
         DCL 1 PLACOM STATIC,                                           COL00660
               2 ATLOC(150) FIXED BIN(31),                              COL00670
               2 LINK(200) FIXED BIN(31),                               COL00680
               2 PLACE(100) FIXED BIN(31),                              COL00690
               2 FIXED(100) FIXED BIN(31),                              COL00700
               2 HOLDNG FIXED BIN(31);                                  COL00710
                                                                        COL00720
         DCL 1 ABBCOM STATIC,                                           COL00730
               2 ABB(150) FIXED BIN(31);                                COL00740
                                                                        COL00750
                                                                        COL00760
          DCL PICWORD PICTURE 'S9999' STATIC;                           COL00770
                                                                        COL00780
1  DCL 1  ADVARS STATIC,                                                COL00790
       2  ABBNUM       FIXED BIN(31)  INIT(0),                          COL00800
       2  IX           FIXED BIN(31)  INIT (65549),                     COL00810
       2  IY           FIXED BIN(31)  INIT(0),                          COL00820
       2  Y            FLOAT BIN(31) ,                                  COL00830
       2  AXE          FIXED BIN(31)  INIT(0),                          COL00840
       2  BACK         FIXED BIN(31)  INIT(0),                          COL00850
       2  BATTER       FIXED BIN(31)  INIT(0),                          COL00860
       2  BEAR         FIXED BIN(31)  INIT(0),                          COL00870
       2  BIRD         FIXED BIN(31)  INIT(0),                          COL00880
       2  BONUS        FIXED BIN(31)  INIT(0),                          COL00890
       2  BOTTLE       FIXED BIN(31)  INIT(0),                          COL00900
       2  CAGE         FIXED BIN(31)  INIT(0),                          COL00910
       2  CAVE         FIXED BIN(31)  INIT(0),                          COL00920
       2  CCODE        FIXED BIN(31)  INIT(0),                          COL00930
       2  CH           FIXED BIN(31)  INIT(0),                          COL00940
       2  CHAIN        FIXED BIN(31)  INIT(0),                          COL00950
       2  CHASM        FIXED BIN(31)  INIT(0),                          COL00960
       2  CHEST        FIXED BIN(31)  INIT(0),                          COL00970
       2  CHLOC        FIXED BIN(31)  INIT(0),                          COL00980
       2  CHLOC2       FIXED BIN(31)  INIT(0),                          COL00990
       2  CLAM         FIXED BIN(31)  INIT(0),                          COL01000
       2  CLOCK1       FIXED BIN(31)  INIT(0),                          COL01010
       2  CLOCK2       FIXED BIN(31)  INIT(0),                          COL01020
       2  CLSSES       FIXED BIN(31)  INIT(0),                          COL01030
       2  CLSSIZ       FIXED BIN(31)  INIT(12),                         COL01040
       2  COINS        FIXED BIN(31)  INIT(0),                          COL01050
       2  DALTLC       FIXED BIN(31)  INIT(0),                          COL01060
       2  DETAIL       FIXED BIN(31)  INIT(0),                          COL01070
       2  DFLAG        FIXED BIN(31)  INIT(0),                          COL01080
       2  DKILL        FIXED BIN(31)  INIT(0),                          COL01090
       2  DOOR         FIXED BIN(31)  INIT(0),                          COL01100
       2  DPRSSN       FIXED BIN(31)  INIT(0),                          COL01110
       2  DRAGON       FIXED BIN(31)  INIT(0),                          COL01120
       2  DTOTAL       FIXED BIN(31)  INIT(0),                          COL01130
       2  DWARF        FIXED BIN(31)  INIT(0),                          COL01140
       2  EGGS         FIXED BIN(31)  INIT(0),                          COL01150
       2  EMRALD       FIXED BIN(31)  INIT(0),                          COL01160
       2  ENTRNC       FIXED BIN(31)  INIT(0),                          COL01170
       2  FIND         FIXED BIN(31)  INIT(0),                          COL01180
       2  FISSUR       FIXED BIN(31)  INIT(0),                          COL01190
       2  FOO          FIXED BIN(31)  INIT(0),                          COL01200
       2  FOOBAR       FIXED BIN(31)  INIT(0),                          COL01210
       2  FOOD         FIXED BIN(31)  INIT(0),                          COL01220
       2  FROM         FIXED BIN(31)  INIT(0),                          COL01230
       2  GRATE        FIXED BIN(31)  INIT(0),                          COL01240
       2  HINT         FIXED BIN(31)  INIT(0),                          COL01250
       2  HINTLC(20)   FIXED BIN(31)  INIT((20)0),                      COL01260
       2  HNTMAX       FIXED BIN(31)  INIT(0),                          COL01270
       2  I            FIXED BIN(31)  INIT(0),                          COL01280
       2  INLEN        FIXED BIN(31)  INIT(0),                          COL01290
       2  INSTR        CHAR(133) ,                                      COL01300
       2  INVENT       FIXED BIN(31)  INIT(0),                          COL01310
       2  IWEST        FIXED BIN(31)  INIT(0),                          COL01320
       2  J            FIXED BIN(31)  INIT(0),                          COL01330
       2  JUNK1        CHAR(5) ,                                        COL01340
       2  JUNK2        CHAR(5) ,                                        COL01350
       2  JUNK3        CHAR(5) ,                                        COL01360
       2  K            FIXED BIN(31)  INIT(0),                          COL01370
       2  KEYS         FIXED BIN(31)  INIT(0),                          COL01380
       2  KK           FIXED BIN(31)  INIT(0),                          COL01390
       2  KKWORD       CHAR(2) ,                                        COL01400
       2  KNFLOC       FIXED BIN(31)  INIT(0),                          COL01410
       2  KNIFE        FIXED BIN(31)  INIT(0),                          COL01420
       2  KQ           FIXED BIN(31)  INIT(0),                          COL01430
       2  K2           FIXED BIN(31)  INIT(0),                          COL01440
       2  L            FIXED BIN(31)  INIT(0),                          COL01450
       2  LAMP         FIXED BIN(31)  INIT(0),                          COL01460
       2  LIMIT        FIXED BIN(31)  INIT(0),                          COL01470
       2  LINUSE       FIXED BIN(31)  INIT(0),                          COL01480
       2  LL           FIXED BIN(31)  INIT(0),                          COL01490
       2  LOC          FIXED BIN(31)  INIT(0),                          COL01500
       2  LOCK         FIXED BIN(31)  INIT(0),                          COL01510
       2  LOOK         FIXED BIN(31)  INIT(0),                          COL01520
       2  M            FIXED BIN(31)  INIT(0),                          COL01530
       2  MAGZIN       FIXED BIN(31)  INIT(0),                          COL01540
       2  MAXDIE       FIXED BIN(31)  INIT(0),                          COL01550
       2  MAXTRS       FIXED BIN(31)  INIT(0),                          COL01560
       2  MESSAG       FIXED BIN(31)  INIT(0),                          COL01570
       2  MIRROR       FIXED BIN(31)  INIT(0),                          COL01580
       2  MXSCOR       FIXED BIN(31)  INIT(0),                          COL01590
       2  NEWLOC       FIXED BIN(31)  INIT(0),                          COL01600
       2  NUGGET       FIXED BIN(31)  INIT(0),                          COL01610
       2  NULLX        FIXED BIN(31)  INIT(0),                          COL01620
       2  NUMDIE       FIXED BIN(31)  INIT(0),                          COL01630
       2  OBJ          FIXED BIN(31)  INIT(0),                          COL01640
       2  OIL          FIXED BIN(31)  INIT(0),                          COL01650
       2  OLDLC2       FIXED BIN(31)  INIT(0),                          COL01660
       2  OLDLOC       FIXED BIN(31)  INIT(0),                          COL01670
       2  OUTSTR       CHAR(133) VAR ,                                  COL01680
       2  OYSTER       FIXED BIN(31)  INIT(0),                          COL01690
       2  PEARL        FIXED BIN(31)  INIT(0),                          COL01700
       2  PILLOW       FIXED BIN(31)  INIT(0),                          COL01710
       2  PLANT        FIXED BIN(31)  INIT(0),                          COL01720
       2  PLANT2       FIXED BIN(31)  INIT(0),                          COL01730
       2  POSN         FIXED BIN(31)  INIT(0),                          COL01740
       2  PYRAM        FIXED BIN(31)  INIT(0),                          COL01750
       2  REPLY        CHAR(5) ,                                        COL01760
       2  ROD          FIXED BIN(31)  INIT(0),                          COL01770
       2  ROD2         FIXED BIN(31)  INIT(0),                          COL01780
       2  RUG          FIXED BIN(31)  INIT(0),                          COL01790
       2  SAY          FIXED BIN(31)  INIT(0),                          COL01800
       2  SCORE        FIXED BIN(31)  INIT(0),                          COL01810
       2  SECT         FIXED BIN(31)  INIT(0),                          COL01820
       2  SNAKE        FIXED BIN(31)  INIT(0),                          COL01830
       2  SPICES       FIXED BIN(31)  INIT(0),                          COL01840
       2  SPK          FIXED BIN(31)  INIT(0),                          COL01850
       2  STEPS        FIXED BIN(31)  INIT(0),                          COL01860
       2  STICK        FIXED BIN(31)  INIT(0),                          COL01870
       2  TABLET       FIXED BIN(31)  INIT(0),                          COL01880
       2  TABNDX       FIXED BIN(31)  INIT(0),                          COL01890
       2  TALLY        FIXED BIN(31)  INIT(0),                          COL01900
       2  TALLY2       FIXED BIN(31)  INIT(0),                          COL01910
       2  TEMP         FIXED BIN(31)  INIT(0),                          COL01920
       2  THROW        FIXED BIN(31)  INIT(0),                          COL01930
       2  TRAVEL(750)  FIXED BIN(31)  INIT((750)0),                     COL01940
       2  ATTACK       FIXED BIN(31)  INIT(0),                          COL01950
       2  TRIDNT       FIXED BIN(31)  INIT(0),                          COL01960
       2  TROLL        FIXED BIN(31)  INIT(0),                          COL01970
       2  TROLL2       FIXED BIN(31)  INIT(0),                          COL01980
       2  TRVS         FIXED BIN(31)  INIT(0),                          COL01990
       2  TURNS        FIXED BIN(31)  INIT(0),                          COL02000
       2  VASE         FIXED BIN(31)  INIT(0),                          COL02010
       2  VEND         FIXED BIN(31)  INIT(0),                          COL02020
       2  VERB         FIXED BIN(31)  INIT(0),                          COL02030
       2  WATER        FIXED BIN(31)  INIT(0),                          COL02040
       2  WD1          CHAR(5) ,                                        COL02050
       2  WD1X         CHAR(5) ,                                        COL02060
       2  WD2          CHAR(5) ,                                        COL02070
       2  WD2X         CHAR(5) ,                                        COL02080
       2  WORD         FIXED BIN(31)  INIT(0),                          COL02090
       2  WORDEND      FIXED BIN(31)  INIT(0),                          COL02100
       2  WORDSIZE     FIXED BIN(31)  INIT(0),                          COL02110
       2  WORDSTRT     FIXED BIN(31)  INIT(0),                          COL02120
       2  LTEXT(150)   FIXED BIN(31)  INIT((150)0),                     COL02130
       2  STEXT(150)   FIXED BIN(31)  INIT((150)0),                     COL02140
       2  KEY(150)     FIXED BIN(31)  INIT((150)0),                     COL02150
       2  COND(150)    FIXED BIN(31)  INIT((150)0),                     COL02160
       2  PLAC(100)    FIXED BIN(31)  INIT((100)0),                     COL02170
       2  FIXD(100)    FIXED BIN(31)  INIT((100)0),                     COL02180
       2  PROP(100)    FIXED BIN(31)  INIT((100)0),                     COL02190
       2  ACTSPK(35)   FIXED BIN(31)  INIT((35)0),                      COL02200
       2  CTEXT(12)    FIXED BIN(31)  INIT((12)0),                      COL02210
       2  CVAL(12)     FIXED BIN(31)  INIT((12)0),                      COL02220
       2  HINTS(20,4)  FIXED BIN(31)  INIT((80)0),                      COL02230
       2  HINTED(20)   BIT(1) ,                                         COL02240
       2  TK(20)       FIXED BIN(31) ,                                  COL02250
       2  TKWORD(10)   CHAR(1) ,                                        COL02260
       2  DLOC(6)      FIXED BIN(31) ,                                  COL02270
       2  ODLOC(6)     FIXED BIN(31) ,                                  COL02280
       2  DSEEN(6)     BIT(1) ,                                         COL02290
       2  LINSIZ       FIXED BIN(31) INIT (9650) ,                      COL02300
       2  TRVSIZ       FIXED BIN(31) INIT (750) ,                       COL02310
       2  LOCSIZ       FIXED BIN(31) INIT (150) ,                       COL02320
       2  VRBSIZ       FIXED BIN(31) INIT (35) ,                        COL02330
       2  RTXSIZ       FIXED BIN(31) INIT (205) ,                       COL02340
       2  CLSMAX       FIXED BIN(31) INIT (12) ,                        COL02350
       2  HNTSIZ       FIXED BIN(31) INIT (20) ,                        COL02360
       2  WZDARK       BIT(1) ,                                         COL02370
       2  LMWARN       BIT(1) ,                                         COL02380
       2  CLOSNG       BIT(1) ,                                         COL02390
       2  PANIC        BIT(1) ,                                         COL02400
       2  CLOSED       BIT(1) ,                                         COL02410
       2  GAVEUP       BIT(1) ,                                         COL02420
       2  SCORNG       BIT(1) ,                                         COL02430
       2  LOGON        BIT(1) INIT ('0'B),                              COL02440
       2  YEA          BIT(1) ;                                         COL02450
                                                                        COL02460
                                                                        COL02470
 ON ERROR BEGIN;                                                        COL02480
    PUT SKIP DATA (ADVARS);                                             COL02490
    END;                                                                COL02500
                                                                        COL02510
  /*  LOAD STRUCTURES DATABASE */                                       COL02520
                                                                        COL02530
     CALL GETFL( FN,FT, FM,                                             COL02540
            TXTCOM.RTEXT(1), 49070,                                     COL02550
            BLKCOM.BLKLIN, 4 ,                                          COL02560
            PTXCOM.PTEXT(1), 400,                                       COL02570
            VOCCOM.KTAB(1), 3900,                                       COL02580
            PLACOM.ATLOC(1), 2204,                                      COL02590
            ABBCOM.ABB(1), 600,                                         COL02600
            PICWORD,16,                                                 COL02610
            ADVARS.ABBNUM, 8207,                                        COL02620
                 IRC ) ;                                                COL02630
                                                                        COL02640
    IF IRC ^= 0 THEN DO ;                                               COL02650
         PUT STRING (OUTSTR) EDIT (                                     COL02660
  'ERROR: consult your local wizard. Unable to load database, RC=',     COL02670
   IRC)      (A,F(8));                                                  COL02680
         CALL LINEOUT;                                                  COL02690
         stop;                                                          COL02700
       end ;                                                            COL02710
                                                                        COL02720
1/*  START-UP, DWARF STUFF */                                           COL02730
                                                                        COL02740
 L1:     CALL ITIME(I);                                                 COL02750
         DO J=1 TO I;                                                   COL02760
            CALL RAN(1);                                                COL02770
            END;                                                        COL02780
         I=RAN(1);                                                      COL02790
         HINTED(3)=YES(65,1,0);                                         COL02800
         LOC,NEWLOC=1;                                                  COL02810
         LIMIT=330;                                                     COL02820
         IF HINTED(3) THEN LIMIT=1000;                                  COL02830
                                                                        COL02840
 /*  CAN'T LEAVE CAVE ONCE IT'S CLOSING (EXCEPT BY MAIN OFFICE). */     COL02850
                                                                        COL02860
 L2:     IF NEWLOC >= 9 | NEWLOC = 0 |  ^ CLOSNG THEN GOTO L71;         COL02870
         CALL RSPEAK(130);                                              COL02880
         NEWLOC=LOC;                                                    COL02890
         IF  ^ PANIC THEN CLOCK2=15;                                    COL02900
         PANIC='1'B;                                                    COL02910
                                                                        COL02920
 /*                                                                     COL02930
    SEE IF A DWARF HAS SEEN HIM AND HAS COME FROM WHERE HE              COL02940
    WANTS TO GO.  IF SO, THE DWARF'S BLOCKING HIS WAY.  IF              COL02950
    COMING FROM PLACE FORBIDDEN TO PIRATE (DWARVES ROOTED IN            COL02960
    PLACE) LET HIM GET OUT (AND ATTACKED).                              COL02970
 */                                                                     COL02980
                                                                        COL02990
 L71:    IF NEWLOC = LOC | FORCED(LOC) | BITSET(LOC,3) THEN GOTO L74;   COL03000
         DO I=1 TO 5;                                                   COL03010
             IF ^ (ODLOC(I) ^= NEWLOC |  ^ DSEEN(I)) THEN DO;           COL03020
                 NEWLOC=LOC;                                            COL03030
                 CALL RSPEAK(2);                                        COL03040
                 GOTO L74;                                              COL03050
                 END;                                                   COL03060
             END;                                                       COL03070
 L74:    LOC=NEWLOC;                                                    COL03080
                                                                        COL03090
 /*                                                                     COL03100
    DWARF STUFF.  SEE EARLIER COMMENTS FOR DESCRIPTION OF               COL03110
    VARIABLES.  REMEMBER SIXTH DWARF IS PIRATE AND IS THUS              COL03120
    VERY DIFFERENT EXCEPT FOR MOTION RULES.                             COL03130
                                                                        COL03140
    FIRST OFF, DON'T LET THE DWARVES FOLLOW HIM INTO A PIT OR           COL03150
    A WALL.  ACTIVATE THE WHOLE MESS THE FIRST TIME HE GETS             COL03160
    AS FAR AS THE HALL OF MISTS (LOC 15).  IF NEWLOC IS                 COL03170
    FORBIDDEN TO PIRATE (IN PARTICULAR, IF IT'S BEYOND THE              COL03180
    TROLL BRIDGE), BYPASS DWARF STUFF.  THAT WAY PIRATE CAN'T           COL03190
    STEAL RETURN TOLL, AND DWARVES CAN'T MEET THE BEAR.  ALSO           COL03200
    MEANS DWARVES WON'T FOLLOW HIM INTO DEAD END IN MAZE, BUT           COL03210
    C'EST LA VIE.  THEY'LL WAIT FOR HIM OUTSIDE THE DEAD END.           COL03220
 */                                                                     COL03230
                                                                        COL03240
         IF LOC = 0 | FORCED(LOC) | BITSET(NEWLOC,3) THEN GOTO L2000;   COL03250
         IF DFLAG ^= 0 THEN GOTO L6000;                                 COL03260
         IF LOC >= 15 THEN DFLAG=1;                                     COL03270
         GOTO L2000;                                                    COL03280
                                                                        COL03290
 /*                                                                     COL03300
    WHEN WE ENCOUNTER THE FIRST DWARF, WE KILL 0, 1, OR 2 OF            COL03310
    THE 5 DWARVES.  IF ANY OF THE SURVIVORS IS AT LOC,                  COL03320
    REPLACE HIM WITH THE ALTERNATE.                                     COL03330
 */                                                                     COL03340
                                                                        COL03350
 L6000:  IF DFLAG ^= 1 THEN GOTO L6010;                                 COL03360
         IF LOC < 15 | PCT(95) THEN GOTO L2000;                         COL03370
         DFLAG=2;                                                       COL03380
         DO I=1 TO 2;                                                   COL03390
             J=1+RAN(5);                                                COL03400
             IF PCT(50) THEN DLOC(J)=0;                                 COL03410
             END;                                                       COL03420
         DO I=1 TO 5;                                                   COL03430
             IF DLOC(I) = LOC THEN DLOC(I)=DALTLC;                      COL03440
             ODLOC(I)=DLOC(I);                                          COL03450
             END;                                                       COL03460
         CALL RSPEAK(3);                                                COL03470
         CALL DROP(AXE,LOC);                                            COL03480
         GOTO L2000;                                                    COL03490
                                                                        COL03500
 /*                                                                     COL03510
    THINGS ARE IN FULL SWING.  MOVE EACH DWARF AT RANDOM,               COL03520
    EXCEPT IF HE'S SEEN US HE STICKS WITH US.  DWARVES NEVER            COL03530
    GO TO LOCS <15.  IF WANDERING AT RANDOM, THEY DON'T BACK            COL03540
    UP UNLESS THERE'S NO ALTERNATIVE.  IF THEY DON'T HAVE TO            COL03550
    MOVE, THEY ATTACK.  AND, OF COURSE, DEAD DWARVES DON'T DO           COL03560
    MUCH OF ANYTHING.                                                   COL03570
 */                                                                     COL03580
                                                                        COL03590
 L6010:  DTOTAL=0;                                                      COL03600
         ATTACK=0;                                                      COL03610
         STICK=0;                                                       COL03620
         DO I=1 TO 6;                                                   COL03630
             IF DLOC(I) = 0 THEN GOTO L6030;                            COL03640
             J=1;                                                       COL03650
             KK=DLOC(I);                                                COL03660
             KK=KEY(KK);                                                COL03670
             IF KK = 0 THEN GOTO L6016;                                 COL03680
 L6012:      NEWLOC=MOD(ABS(TRAVEL(KK))/1000,1000);                     COL03690
             IF NEWLOC > 300 | NEWLOC < 15 | NEWLOC = ODLOC(I)          COL03700
               | (J > 1 & NEWLOC = TK(J-1)) | J >= 20                   COL03710
               | NEWLOC = DLOC(I) | FORCED(NEWLOC)                      COL03720
               | (I = 6 & BITSET(NEWLOC,3))                             COL03730
               | ABS(TRAVEL(KK))/1000000 = 100 THEN GOTO L6014;         COL03740
             TK(J)=NEWLOC;                                              COL03750
             J=J+1;                                                     COL03760
 L6014:      KK=KK+1;                                                   COL03770
             IF TRAVEL(KK-1) >= 0 THEN GOTO L6012;                      COL03780
 L6016:      TK(J)=ODLOC(I);                                            COL03790
             IF J >= 2 THEN J=J-1;                                      COL03800
             J=1+RAN(J);                                                COL03810
             ODLOC(I)=DLOC(I);                                          COL03820
             DLOC(I)=TK(J);                                             COL03830
             DSEEN(I)=(DSEEN(I) & LOC >= 15)                            COL03840
              | (DLOC(I) = LOC | ODLOC(I) = LOC);                       COL03850
             IF ^DSEEN(I) THEN GOTO L6030;                              COL03860
             DLOC(I)=LOC;                                               COL03870
             IF I ^= 6 THEN GOTO L6027;                                 COL03880
                                                                        COL03890
 /*                                                                     COL03900
    THE PIRATE'S SPOTTED HIM.  HE LEAVES HIM ALONE ONCE WE'VE           COL03910
    FOUND CHEST.  K COUNTS IF A TREASURE IS HERE.  IF NOT,              COL03920
    AND TALLY=TALLY2 PLUS ONE FOR AN UNSEEN CHEST, LET THE              COL03930
    PIRATE BE SPOTTED.                                                  COL03940
 */                                                                     COL03950
                                                                        COL03960
             IF LOC = CHLOC | PROP(CHEST) >= 0 THEN GOTO L6030;         COL03970
             K=0;                                                       COL03980
             DO J=50 TO MAXTRS;                                         COL03990
                                                                        COL04000
 /* PIRATE WON'T TAKE PYRAMID FROM PLOVER ROOM OR DARK ROOM             COL04010
    (TOO EASY!).  */                                                    COL04020
                                                                        COL04030
                 IF J = PYRAM & (LOC = PLAC(PYRAM)                      COL04040
                  | LOC = PLAC(EMRALD)) THEN GOTO L6020;                COL04050
                 IF TOTING(J) THEN GOTO L6022;                          COL04060
 L6020:          IF HERE(J) THEN K=1;                                   COL04070
                 END;                                                   COL04080
             IF TALLY = TALLY2+1 & K = 0 & PLACE(CHEST) = 0             COL04090
              & HERE(LAMP) & PROP(LAMP) = 1 THEN GOTO L6025;            COL04100
             IF ODLOC(6) ^= DLOC(6) & PCT(20) THEN CALL RSPEAK(127);    COL04110
             GOTO L6030;                                                COL04120
                                                                        COL04130
 L6022:      CALL RSPEAK(128);                                          COL04140
                                                                        COL04150
 /* DON'TSTEAL CHEST BACK FROM TROLL! */                                COL04160
                                                                        COL04170
             IF PLACE(MESSAG) = 0 THEN CALL MOVE(CHEST,CHLOC);          COL04180
             CALL MOVE(MESSAG,CHLOC2);                                  COL04190
             DO J=50 TO MAXTRS;                                         COL04200
                 IF J = PYRAM & (LOC = PLAC(PYRAM)                      COL04210
                  | LOC = PLAC(EMRALD)) THEN GOTO L6023;                COL04220
                 IF AT(J) & FIXED(J) = 0 THEN CALL CARRY(J,LOC);        COL04230
                 IF TOTING(J) THEN CALL DROP(J,CHLOC);                  COL04240
 L6023:          END;                                                   COL04250
 L6024:      DLOC(6)=CHLOC;                                             COL04260
             ODLOC(6)=CHLOC;                                            COL04270
             DSEEN(6)='0'B;                                             COL04280
             GOTO L6030;                                                COL04290
                                                                        COL04300
 L6025:      CALL RSPEAK(186);                                          COL04310
             CALL MOVE(CHEST,CHLOC);                                    COL04320
             CALL MOVE(MESSAG,CHLOC2);                                  COL04330
             GOTO L6024;                                                COL04340
                                                                        COL04350
 /* THIS THREATENING LITTLE DWARF IS IN THE ROOM WITH HIM! */           COL04360
                                                                        COL04370
 L6027:      DTOTAL=DTOTAL+1;                                           COL04380
             IF ODLOC(I) ^= DLOC(I) THEN GOTO L6030;                    COL04390
             ATTACK=ATTACK+1;                                           COL04400
             IF KNFLOC >= 0 THEN KNFLOC=LOC;                            COL04410
             IF RAN(1000) < 95*(DFLAG-2) THEN STICK=STICK+1;            COL04420
 L6030:      END;                                                       COL04430
                                                                        COL04440
 /* NOW WE KNOW WHAT'S HAPPENING.  LET'S TELL THE POOR SUCKER           COL04450
    ABOUT IT.  */                                                       COL04460
                                                                        COL04470
         IF DTOTAL = 0 THEN GOTO L2000;                                 COL04480
         IF DTOTAL = 1 THEN GOTO L75;                                   COL04490
         CALL LINESKP;                                                  COL04500
         PUT STRING (OUTSTR) EDIT ('There are ',DTOTAL,                 COL04510
             ' threatening little dwarves in the room with you.')       COL04520
             (A,F(1),A);                                                COL04530
         CALL LINEOUT;                                                  COL04540
         GOTO L77;                                                      COL04550
 L75:    CALL RSPEAK(4);                                                COL04560
 L77:    IF ATTACK = 0 THEN GOTO L2000;                                 COL04570
         IF DFLAG = 2 THEN DFLAG=3;                                     COL04580
                                                                        COL04590
 /*                                                                     COL04600
    DWARVES GET *VERY* MAD!                                             COL04610
 */                                                                     COL04620
                                                                        COL04630
         IF ATTACK = 1 THEN GOTO L79;                                   COL04640
         PUT STRING (OUTSTR) EDIT (ATTACK,                              COL04650
            ' of them throw knives at you!')                            COL04660
             (F(1),A);                                                  COL04670
         CALL LINEOUT;                                                  COL04680
         K=6;                                                           COL04690
 L82:    IF STICK > 1 THEN GOTO L83;                                    COL04700
         CALL RSPEAK(K+STICK);                                          COL04710
         IF STICK = 0 THEN GOTO L2000;                                  COL04720
         GOTO L84;                                                      COL04730
 L83:    PUT STRING (OUTSTR) EDIT (STICK,' of them get you!') (F(1),A); COL04740
         CALL LINEOUT;                                                  COL04750
 L84:    OLDLC2=LOC;                                                    COL04760
         GOTO L99;                                                      COL04770
                                                                        COL04780
 L79:    CALL RSPEAK(5);                                                COL04790
         K=52;                                                          COL04800
         GOTO L82;                                                      COL04810
                                                                        COL04820
1/* DESCRIBE THE CURRENT LOCATION AND (MAYBE) GET NEXT COMMAND. */      COL04830
                                                                        COL04840
 /* PRINT TEXT FOR CURRENT LOC. */                                      COL04850
                                                                        COL04860
 L2000:  IF LOC = 0 THEN GOTO L99;                                      COL04870
         KK=STEXT(LOC);                                                 COL04880
         IF MOD(ABB(LOC),ABBNUM) = 0 | KK = 0 THEN KK=LTEXT(LOC);       COL04890
         IF FORCED(LOC) |  ^ DARK(0) THEN GOTO L2001;                   COL04900
         IF WZDARK & PCT(35) THEN GOTO L90;                             COL04910
         KK=RTEXT(16);                                                  COL04920
 L2001:  IF TOTING(BEAR) THEN CALL RSPEAK(141);                         COL04930
         CALL SPEAK(KK);                                                COL04940
         K=1;                                                           COL04950
         IF FORCED(LOC) THEN GOTO L8;                                   COL04960
         IF LOC = 33 & PCT(25) &  ^ CLOSNG THEN CALL RSPEAK(8);         COL04970
                                                                        COL04980
 /*                                                                     COL04990
    PRINT OUT DESCRIPTIONS OF OBJECTS AT THIS LOCATION.  IF             COL05000
    NOT CLOSING AND PROPERTY VALUE IS NEGATIVE, TALLY OFF               COL05010
    ANOTHER TREASURE.  RUG IS SPECIAL CASE; ONCE SEEN, ITS              COL05020
    PROP IS 1 (DRAGON ON IT) TILL DRAGON IS KILLED.                     COL05030
    SIMILARLY FOR CHAIN; PROP IS INITIALLY 1 (LOCKED TO                 COL05040
    BEAR).  THESE HACKS ARE BECAUSE PROP=0 IS NEEDED TO GET             COL05050
    FULL SCORE.                                                         COL05060
 */                                                                     COL05070
                                                                        COL05080
         IF DARK(0) THEN GOTO L2012;                                    COL05090
         ABB(LOC)=ABB(LOC)+1;                                           COL05100
         I=ATLOC(LOC);                                                  COL05110
 L2004:   IF I = 0 THEN GOTO L2012;                                     COL05120
         OBJ=I;                                                         COL05130
         IF OBJ > 100 THEN OBJ=OBJ-100;                                 COL05140
         IF OBJ = STEPS & TOTING(NUGGET) THEN GOTO L2008;               COL05150
         IF PROP(OBJ) >= 0 THEN GOTO L2006;                             COL05160
         IF CLOSED THEN GOTO L2008;                                     COL05170
         PROP(OBJ)=0;                                                   COL05180
         IF OBJ = RUG | OBJ = CHAIN THEN PROP(OBJ)=1;                   COL05190
         TALLY=TALLY-1;                                                 COL05200
                                                                        COL05210
 /* IF REMAINING TREASURES TOO ELUSIVE, ZAP HIS LAMP. */                COL05220
                                                                        COL05230
         IF TALLY = TALLY2 & TALLY ^= 0 THEN LIMIT=MIN(35,LIMIT);       COL05240
 L2006:  KK=PROP(OBJ);                                                  COL05250
         IF OBJ = STEPS & LOC = FIXED(STEPS) THEN KK=1;                 COL05260
         CALL PSPEAK(OBJ,KK);                                           COL05270
 L2008:  I=LINK(I);                                                     COL05280
         GOTO L2004;                                                    COL05290
                                                                        COL05300
 L2009:  K=54;                                                          COL05310
 L2010:  SPK=K;                                                         COL05320
 L2011:  CALL RSPEAK(SPK);                                              COL05330
                                                                        COL05340
 L2012:  VERB=0;                                                        COL05350
         OBJ=0;                                                         COL05360
                                                                        COL05370
 /*                                                                     COL05380
    CHECK IF THIS LOC IS ELIGIBLE FOR ANY HINTS.  IF BEEN               COL05390
    HERE LONG ENOUGH, BRANCH TO HELP SECTION (ON LATER PAGE).           COL05400
    HINTS ALL COME BACK HERE EVENTUALLY TO FINISH THE LOOP.             COL05410
    IGNORE "HINTS" < 4 (SPECIAL STUFF, SEE DATABASE NOTES).             COL05420
 */                                                                     COL05430
                                                                        COL05440
 L2600:  DO HINT=4 TO HNTMAX;                                           COL05450
             IF ^ (HINTED(HINT)) THEN DO;                               COL05460
                 IF ^BITSET(LOC,HINT) THEN HINTLC(HINT)=-1;             COL05470
                 HINTLC(HINT)=HINTLC(HINT)+1;                           COL05480
                 IF HINTLC(HINT) >= HINTS(HINT,1) THEN GOTO L40000;     COL05490
                 END;                                                   COL05500
             END;                                                       COL05510
                                                                        COL05520
 /*                                                                     COL05530
    KICK THE RANDOM NUMBER GENERATOR JUST TO ADD VARIETY TO             COL05540
    THE CHASE.  ALSO, IF CLOSING TIME, CHECK FOR ANY OBJECTS            COL05550
    BEING TOTED WITH PROP < 0 AND SET THE PROP TO -1-PROP.              COL05560
    THIS WAY OBJECTS WON'T BE DESCRIBED UNTIL THEY'VE BEEN              COL05570
    PICKED UP AND PUT DOWN SEPARATE FROM THEIR RESPECTIVE               COL05580
    PILES.  DON'T TICK CLOCK1 UNLESS WELL INTO CAVE (AND NOT            COL05590
    AT Y2).                                                             COL05600
 */                                                                     COL05610
                                                                        COL05620
 L2602:  IF ^CLOSED THEN GOTO L2605;                                    COL05630
         IF PROP(OYSTER) < 0 & TOTING(OYSTER)                           COL05640
                THEN CALL PSPEAK(OYSTER,1);                             COL05650
         DO I=1 TO 100;                                                 COL05660
             IF TOTING(I) & PROP(I) < 0 THEN PROP(I)=-1-PROP(I);        COL05670
             END;                                                       COL05680
 L2605:  WZDARK=DARK(0);                                                COL05690
         IF KNFLOC > 0 & KNFLOC ^= LOC THEN KNFLOC=0;                   COL05700
         I=RAN(1);                                                      COL05710
         CALL GETIN(WD1,WD1X,WD2,WD2X);                                 COL05720
                                                                        COL05730
 /*                                                                     COL05740
    EVERY INPUT, CHECK "FOOBAR" FLAG.  IF ZERO, NOTHING'S               COL05750
    GOING ON.  IF POS, MAKE NEG.  IF NEG, HE SKIPPED A WORD,            COL05760
    SO MAKE IT ZERO.                                                    COL05770
 */                                                                     COL05780
                                                                        COL05790
 L2608:  FOOBAR=MIN(0,-FOOBAR);                                         COL05800
         TURNS=TURNS+1;                                                 COL05810
         IF VERB = SAY & WD2 ^= '     ' THEN VERB=0;                    COL05820
         IF VERB = SAY THEN GOTO L4090;                                 COL05830
         IF TALLY = 0 & LOC >= 15 & LOC ^= 33 THEN CLOCK1=CLOCK1-1;     COL05840
         IF CLOCK1 = 0 THEN GOTO L10000;                                COL05850
         IF CLOCK1 < 0 THEN CLOCK2=CLOCK2-1;                            COL05860
         IF CLOCK2 = 0 THEN GOTO L11000;                                COL05870
         IF PROP(LAMP) = 1 THEN LIMIT=LIMIT-1;                          COL05880
         IF LIMIT <= 30 & HERE(BATTER) & PROP(BATTER) = 0               COL05890
          & HERE(LAMP) THEN GOTO L12000;                                COL05900
         IF LIMIT = 0 THEN GOTO L12400;                                 COL05910
         IF LIMIT < 0 & LOC <= 8 THEN GOTO L12600;                      COL05920
         IF LIMIT <= 30 THEN GOTO L12200;                               COL05930
 L19999: K=43;                                                          COL05940
         IF LIQLOC(LOC) = WATER THEN K=70;                              COL05950
         IF WD1 = 'ENTER' & (WD2 = 'STREA' | WD2 = 'WATER')             COL05960
          THEN GOTO L2010;                                              COL05970
         IF WD1 = 'ENTER' & WD2 ^= '    ' THEN GOTO L2800;              COL05980
         IF (WD1 ^= 'WATER' & WD1 ^= 'OIL')                             COL05990
          | (WD2 ^= 'PLANT' & WD2 ^= 'DOOR') THEN GOTO L2610;           COL06000
         IF AT(VOCAB(WD2,1)) THEN WD2='POUR';                           COL06010
 L2610:  IF WD1 ^= 'WEST' THEN GOTO L2630;                              COL06020
         IWEST=IWEST+1;                                                 COL06030
         IF IWEST = 10 THEN CALL RSPEAK(17);                            COL06040
 L2630:  I=VOCAB(WD1,-1);                                               COL06050
         IF I = -1 THEN GOTO L3000;                                     COL06060
         K=MOD(I,1000);                                                 COL06070
         KQ=I/1000+1;                                                   COL06080
         SELECT (KQ-1);                                                 COL06090
            WHEN (0) GO TO L8;                                          COL06100
            WHEN (1) GO TO L5000;                                       COL06110
            WHEN (2) GO TO L4000;                                       COL06120
            WHEN (3) GO TO L2010;                                       COL06130
            END;                                                        COL06140
         CALL BUG(22);                                                  COL06150
                                                                        COL06160
 /* GET SECOND WORD FOR ANALYSIS. */                                    COL06170
                                                                        COL06180
 L2800:  WD1=WD2;                                                       COL06190
         WD1X=WD2X;                                                     COL06200
         WD2='     ';                                                   COL06210
         GOTO L2610;                                                    COL06220
                                                                        COL06230
 /* GEE, I DON'T UNDERSTAND. */                                         COL06240
                                                                        COL06250
 L3000:  SPK=60;                                                        COL06260
         IF PCT(20) THEN SPK=61;                                        COL06270
         IF PCT(20) THEN SPK=13;                                        COL06280
         CALL RSPEAK(SPK);                                              COL06290
         GOTO L2600;                                                    COL06300
                                                                        COL06310
 /*                                                                     COL06320
    ANALYSE A VERB.  REMEMBER WHAT IT WAS, GO BACK FOR OBJECT           COL06330
    IF SECOND WORD UNLESS VERB IS "SAY", WHICH SNARFS                   COL06340
    ARBITRARY SECOND WORD.                                              COL06350
 */                                                                     COL06360
                                                                        COL06370
 L4000:  VERB=K;                                                        COL06380
         SPK=ACTSPK(VERB);                                              COL06390
         IF WD2 ^= '     ' & VERB ^= SAY THEN GOTO L2800;               COL06400
         IF VERB = SAY THEN                                             COL06410
             IF WD2 = '     ' THEN GO TO L4080;                         COL06420
                              ELSE GO TO L4090;                         COL06430
         IF OBJ ^= 0 THEN GOTO L4090;                                   COL06440
                                                                        COL06450
 /* ANALYSE AN INTRANSITIVE VERB (IE, NO OBJECT GIVEN YET). */          COL06460
                                                                        COL06470
 L4080:  SELECT (VERB);                                                 COL06480
            WHEN (01) GO TO L8010;       /* TAKE */                     COL06490
            WHEN (02) GO TO L8000;       /* DROP */                     COL06500
            WHEN (03) GO TO L8000;       /* SAY */                      COL06510
            WHEN (04) GO TO L8040;       /* OPEN */                     COL06520
            WHEN (05) GO TO L2009;       /* NOTH */                     COL06530
            WHEN (06) GO TO L8040;       /* LOCK */                     COL06540
            WHEN (07) GO TO L9070;       /* ON */                       COL06550
            WHEN (08) GO TO L9080;       /* OFF */                      COL06560
            WHEN (09) GO TO L8000;       /* WAVE */                     COL06570
            WHEN (10) GO TO L8000;       /* CALM */                     COL06580
            WHEN (11) GO TO L2011;       /* WALK */                     COL06590
            WHEN (12) GO TO L9120;       /* KILL */                     COL06600
            WHEN (13) GO TO L9130;       /* POUR */                     COL06610
            WHEN (14) GO TO L8140;       /* EAT */                      COL06620
            WHEN (15) GO TO L9150;       /* DRNK */                     COL06630
            WHEN (16) GO TO L8000;       /* RUB */                      COL06640
            WHEN (17) GO TO L8000;       /* TOSS */                     COL06650
            WHEN (18) GO TO L8180;       /* QUIT */                     COL06660
            WHEN (19) GO TO L8000;       /* FIND */                     COL06670
            WHEN (20) GO TO L8200;       /* INVN */                     COL06680
            WHEN (21) GO TO L8000;       /* FEED */                     COL06690
            WHEN (22) GO TO L9220;       /* FILL */                     COL06700
            WHEN (23) GO TO L9230;       /* BLST */                     COL06710
            WHEN (24) GO TO L8240;       /* SCOR */                     COL06720
            WHEN (25) GO TO L8250;       /* FOO */                      COL06730
            WHEN (26) GO TO L8260;       /* BRF */                      COL06740
            WHEN (27) GO TO L8270;       /* READ */                     COL06750
            WHEN (28) GO TO L8000;       /* BREK */                     COL06760
            WHEN (29) GO TO L8000;       /* WAKE */                     COL06770
            WHEN (30) GO TO L8300;       /* SUSP */                     COL06780
            WHEN (31) GO TO L8310;       /* HOUR */                     COL06790
            WHEN (32) GO TO SETLOG;      /* LOG  */                     COL06800
            WHEN (33) GO TO L8320;      /* RESUM */                     COL06810
            END;                                                        COL06820
                                                                        COL06830
         CALL BUG(23);                                                  COL06840
                                                                        COL06850
 /* ANALYSE A TRANSITIVE VERB. */                                       COL06860
                                                                        COL06870
 L4090:  SELECT (VERB);                                                 COL06880
            WHEN (01) GO TO L9010;       /* TAKE */                     COL06890
            WHEN (02) GO TO L9020;       /* DROP */                     COL06900
            WHEN (03) GO TO L9030;       /* SAY */                      COL06910
            WHEN (04) GO TO L9040;       /* OPEN */                     COL06920
            WHEN (05) GO TO L2009;       /* NOTH */                     COL06930
            WHEN (06) GO TO L9040;       /* LOCK */                     COL06940
            WHEN (07) GO TO L9070;       /* ON */                       COL06950
            WHEN (08) GO TO L9080;       /* OFF */                      COL06960
            WHEN (09) GO TO L9090;       /* WAVE */                     COL06970
            WHEN (10) GO TO L2011;       /* CALM */                     COL06980
            WHEN (11) GO TO L2011;       /* WALK */                     COL06990
            WHEN (12) GO TO L9120;       /* KILL */                     COL07000
            WHEN (13) GO TO L9130;       /* POUR */                     COL07010
            WHEN (14) GO TO L9140;       /* EAT */                      COL07020
            WHEN (15) GO TO L9150;       /* DRNK */                     COL07030
            WHEN (16) GO TO L9160;       /* RUB */                      COL07040
            WHEN (17) GO TO L9170;       /* TOSS */                     COL07050
            WHEN (18) GO TO L2011;       /* QUIT */                     COL07060
            WHEN (19) GO TO L9190;       /* FIND */                     COL07070
            WHEN (20) GO TO L9190;       /* INVN */                     COL07080
            WHEN (21) GO TO L9210;       /* FEED */                     COL07090
            WHEN (22) GO TO L9220;       /* FILL */                     COL07100
            WHEN (23) GO TO L9230;       /* BLST */                     COL07110
            WHEN (24) GO TO L2011;       /* SCOR */                     COL07120
            WHEN (25) GO TO L2011;       /* FOO */                      COL07130
            WHEN (26) GO TO L2011;       /* BRF */                      COL07140
            WHEN (27) GO TO L9270;       /* READ */                     COL07150
            WHEN (28) GO TO L9280;       /* BREK */                     COL07160
            WHEN (29) GO TO L9290;       /* WAKE */                     COL07170
            WHEN (30) GO TO L2011;       /* SUSP */                     COL07180
            WHEN (31) GO TO L2011;       /* HOUR */                     COL07190
            WHEN (32) GO TO L2011;       /* LOG  */                     COL07200
            END;                                                        COL07210
         CALL BUG(24);                                                  COL07220
                                                                        COL07230
 /*                                                                     COL07240
    ANALYSE AN OBJECT WORD.  SEE IF THE THING IS HERE,                  COL07250
    WHETHER WE'VE GOT A VERB YET, AND SO ON.  OBJECT MUST BE            COL07260
    HERE UNLESS VERB IS "FIND" OR "INVENT(ORY)" (AND NO NEW             COL07270
    VERB YET TO BE ANALYSED).  WATER AND OIL ARE ALSO FUNNY,            COL07280
    SINCE THEY ARE NEVER ACTUALLY DROPPED AT ANY LOCATION,              COL07290
    BUT MIGHT BE HERE INSIDE THE BOTTLE OR AS A FEATURE OF              COL07300
    THE LOCATION.                                                       COL07310
 */                                                                     COL07320
                                                                        COL07330
 L5000:  OBJ=K;                                                         COL07340
         IF FIXED(K) ^= LOC &  ^ HERE(K) THEN GOTO L5100;               COL07350
 L5010:  IF WD2 ^= '     ' THEN GOTO L2800;                             COL07360
         IF VERB ^= 0 THEN GOTO L4090;                                  COL07370
         CALL A5TOA1(WD1,WD1X,TKWORD,K);                                COL07380
         CALL LINESKP;                                                  COL07390
         PUT STRING (OUTSTR) EDIT ('What do you want to do with the ',  COL07400
             (TKWORD(I) DO I=1 TO K)) (A,20 A);                         COL07410
         CALL LINEOUT;                                                  COL07420
         GOTO L2600;                                                    COL07430
                                                                        COL07440
 L5100:  IF K ^= GRATE THEN GOTO L5110;                                 COL07450
         IF LOC = 1 | LOC = 4 | LOC = 7 THEN K=DPRSSN;                  COL07460
         IF LOC > 9 & LOC < 15 THEN K=ENTRNC;                           COL07470
         IF K ^= GRATE THEN GOTO L8;                                    COL07480
 L5110:  IF K ^= DWARF THEN GOTO L5120;                                 COL07490
         DO I=1 TO 5;                                                   COL07500
             IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L5010;             COL07510
             END;                                                       COL07520
 L5120:  IF (LIQ(0) = K & HERE(BOTTLE))                                 COL07530
                | K = LIQLOC(LOC) THEN GOTO L5010;                      COL07540
         IF OBJ ^= PLANT |  ^ AT(PLANT2) | PROP(PLANT2) = 0             COL07550
               THEN GOTO L5130;                                         COL07560
         OBJ=PLANT2;                                                    COL07570
         GOTO L5010;                                                    COL07580
 L5130:  IF OBJ ^= KNIFE | KNFLOC ^= LOC THEN GOTO L5140;               COL07590
         KNFLOC=-1;                                                     COL07600
         SPK=116;                                                       COL07610
         GOTO L2011;                                                    COL07620
 L5140:  IF OBJ ^= ROD |  ^HERE(ROD2) THEN GOTO L5190;                  COL07630
         OBJ=ROD2;                                                      COL07640
         GOTO L5010;                                                    COL07650
 L5190:  IF (VERB = FIND | VERB = INVENT) & WD2 = '     '               COL07660
              THEN GOTO L5010;                                          COL07670
         CALL A5TOA1(WD1,WD1X,TKWORD,K);                                COL07680
         CALL LINESKP;                                                  COL07690
         PUT STRING (OUTSTR) EDIT                                       COL07700
              ('I see no ',(TKWORD(I) DO I=1 TO K),' here!')            COL07710
             (A,20 A);                                                  COL07720
         CALL LINEOUT;                                                  COL07730
         GOTO L2012;                                                    COL07740
1/*                                                                     COL07750
    FIGURE OUT THE NEW LOCATION                                         COL07760
                                                                        COL07770
    GIVEN THE CURRENT LOCATION IN "LOC", AND A MOTION VERB              COL07780
    NUMBER IN "K", PUT THE NEW LOCATION IN "NEWLOC".  THE               COL07790
    CURRENT LOC IS SAVED IN "OLDLOC" IN CASE HE WANTS TO                COL07800
    RETREAT.  THE CURRENT OLDLOC IS SAVED IN OLDLC2, IN CASE            COL07810
    HE DIES.  (IF HE DOES, NEWLOC WILL BE LIMBO, AND OLDLOC             COL07820
    WILL BE WHAT KILLED HIM, SO WE NEED OLDLC2, WHICH IS THE            COL07830
    LAST PLACE HE WAS SAFE.)                                            COL07840
 */                                                                     COL07850
                                                                        COL07860
 L8:     KK=KEY(LOC);                                                   COL07870
         NEWLOC=LOC;                                                    COL07880
         IF KK = 0 THEN CALL BUG(26);                                   COL07890
         IF K = NULLX THEN GOTO L2;                                     COL07900
         IF K = BACK THEN GOTO L20;                                     COL07910
         IF K = LOOK THEN GOTO L30;                                     COL07920
         IF K = CAVE THEN GOTO L40;                                     COL07930
         OLDLC2=OLDLOC;                                                 COL07940
         OLDLOC=LOC;                                                    COL07950
                                                                        COL07960
 L9:     LL=ABS(TRAVEL(KK));                                            COL07970
         IF MOD(LL,1000) = 1 | MOD(LL,1000) = K THEN GOTO L10;          COL07980
         IF TRAVEL(KK) < 0 THEN GOTO L50;                               COL07990
         KK=KK+1;                                                       COL08000
         GOTO L9;                                                       COL08010
                                                                        COL08020
 L10:    LL=LL/1000;                                                    COL08030
 L11:    NEWLOC=LL/1000;                                                COL08040
         K=MOD(NEWLOC,100);                                             COL08050
         IF NEWLOC <= 300 THEN GOTO L13;                                COL08060
         IF PROP(K) ^= NEWLOC/100-3 THEN GOTO L16;                      COL08070
 L12:    IF TRAVEL(KK) < 0 THEN CALL BUG(25);                           COL08080
         KK=KK+1;                                                       COL08090
         NEWLOC=ABS(TRAVEL(KK))/1000;                                   COL08100
         IF NEWLOC = LL THEN GOTO L12;                                  COL08110
         LL=NEWLOC;                                                     COL08120
         GOTO L11;                                                      COL08130
                                                                        COL08140
 L13:    IF NEWLOC <= 100 THEN GOTO L14;                                COL08150
         IF TOTING(K) | (NEWLOC > 200 & AT(K)) THEN GOTO L16;           COL08160
         GOTO L12;                                                      COL08170
                                                                        COL08180
 L14:    IF NEWLOC ^= 0 &  ^PCT(NEWLOC) THEN GOTO L12;                  COL08190
 L16:    NEWLOC=MOD(LL,1000);                                           COL08200
         IF NEWLOC <= 300 THEN GOTO L2;                                 COL08210
         IF NEWLOC <= 500 THEN GOTO L30000;                             COL08220
         CALL RSPEAK(NEWLOC-500);                                       COL08230
         NEWLOC=LOC;                                                    COL08240
         GOTO L2;                                                       COL08250
                                                                        COL08260
 /*                                                                     COL08270
    SPECIAL MOTIONS COME HERE.  LABELLING CONVENTION:                   COL08280
    STATEMENT NUMBERS NNNXX (XX=00-99) ARE USED FOR SPECIAL             COL08290
    CASE NUMBER NNN (NNN=301-500).                                      COL08300
 */                                                                     COL08310
                                                                        COL08320
 L30000: NEWLOC=NEWLOC-300;                                             COL08330
         SELECT (NEWLOC-1);                                             COL08340
             WHEN (00) GO TO L30100;                                    COL08350
             WHEN (01) GO TO L30200;                                    COL08360
             WHEN (02) GO TO L30300;                                    COL08370
             END;                                                       COL08380
         CALL BUG(20);                                                  COL08390
                                                                        COL08400
 /*                                                                     COL08410
    TRAVEL 301.  PLOVER-ALCOVE PASSAGE.  CAN CARRY ONLY                 COL08420
    EMERALD.  NOTE:  TRAVEL TABLE MUST INCLUDE "USELESS"                COL08430
    ENTRIES GOING THROUGH PASSAGE, WHICH CAN NEVER BE USED              COL08440
    FOR ACTUAL MOTION, BUT CAN BE SPOTTED BY "GO BACK".                 COL08450
 */                                                                     COL08460
                                                                        COL08470
 L30100: NEWLOC=99+100-LOC;                                             COL08480
         IF HOLDNG = 0 | (HOLDNG = 1 & TOTING(EMRALD)) THEN GOTO L2;    COL08490
         NEWLOC=LOC;                                                    COL08500
         CALL RSPEAK(117);                                              COL08510
         GOTO L2;                                                       COL08520
                                                                        COL08530
 /*                                                                     COL08540
    TRAVEL 302.  PLOVER TRANSPORT.  DROP THE EMERALD (ONLY              COL08550
    USE SPECIAL TRAVEL IF TOTING IT), SO HE'S FORCED TO USE             COL08560
    THE PLOVER-PASSAGE TO GET IT OUT.  HAVING DROPPED IT, GO            COL08570
    BACK AND PRETEND HE WASN'T CARRYING IT AFTER ALL.                   COL08580
 */                                                                     COL08590
                                                                        COL08600
 L30200: CALL DROP(EMRALD,LOC);                                         COL08610
         GOTO L12;                                                      COL08620
                                                                        COL08630
 /*                                                                     COL08640
    TRAVEL 303.  TROLL BRIDGE.  MUST BE DONE ONLY AS SPECIAL            COL08650
    MOTION SO THAT DWARVES WON'T WANDER ACROSS AND ENCOUNTER            COL08660
    THE BEAR.  (THEY WON'T FOLLOW THE PLAYER THERE BECAUSE              COL08670
    THAT REGION IS FORBIDDEN TO THE PIRATE.) IF                         COL08680
    PROP(TROLL)=1, HE'S CROSSED SINCE PAYING, SO STEP OUT AND           COL08690
    BLOCK HIM.  (STANDARD TRAVEL ENTRIES CHECK FOR                      COL08700
    PROP(TROLL)=0.) SPECIAL STUFF FOR BEAR.                             COL08710
 */                                                                     COL08720
                                                                        COL08730
 L30300: IF PROP(TROLL) ^= 1 THEN GOTO L30310;                          COL08740
         CALL PSPEAK(TROLL,1);                                          COL08750
         PROP(TROLL)=0;                                                 COL08760
         CALL MOVE(TROLL2,0);                                           COL08770
         CALL MOVE(TROLL2+100,0);                                       COL08780
         CALL MOVE(TROLL,PLAC(TROLL));                                  COL08790
         CALL MOVE(TROLL+100,FIXD(TROLL));                              COL08800
         CALL JUGGLE(CHASM);                                            COL08810
         NEWLOC=LOC;                                                    COL08820
         GOTO L2;                                                       COL08830
                                                                        COL08840
 L30310: NEWLOC=PLAC(TROLL)+FIXD(TROLL)-LOC;                            COL08850
         IF PROP(TROLL) = 0 THEN PROP(TROLL)=1;                         COL08860
         IF ^TOTING(BEAR) THEN GOTO L2;                                 COL08870
         CALL RSPEAK(162);                                              COL08880
         PROP(CHASM)=1;                                                 COL08890
         PROP(TROLL)=2;                                                 COL08900
         CALL DROP(BEAR,NEWLOC);                                        COL08910
         FIXED(BEAR)=-1;                                                COL08920
         PROP(BEAR)=3;                                                  COL08930
         IF PROP(SPICES) < 0 THEN TALLY2=TALLY2+1;                      COL08940
         OLDLC2=NEWLOC;                                                 COL08950
         GOTO L99;                                                      COL08960
                                                                        COL08970
 /* END OF SPECIALS. */                                                 COL08980
                                                                        COL08990
 /*                                                                     COL09000
    HANDLE "GO BACK".  LOOK FOR VERB WHICH GOES FROM LOC TO             COL09010
    OLDLOC, OR TO OLDLC2 IF OLDLOC HAS FORCED-MOTION.  K2               COL09020
    SAVES ENTRY -> FORCED LOC -> PREVIOUS LOC.                          COL09030
 */                                                                     COL09040
                                                                        COL09050
 L20:    K=OLDLOC;                                                      COL09060
         IF FORCED(K) THEN K=OLDLC2;                                    COL09070
         OLDLC2=OLDLOC;                                                 COL09080
         OLDLOC=LOC;                                                    COL09090
         K2=0;                                                          COL09100
         IF K ^= LOC THEN GOTO L21;                                     COL09110
         CALL RSPEAK(91);                                               COL09120
         GOTO L2;                                                       COL09130
                                                                        COL09140
 L21:    LL=MOD((ABS(TRAVEL(KK))/1000),1000);                           COL09150
         IF LL = K THEN GOTO L25;                                       COL09160
         IF LL > 300 THEN GOTO L22;                                     COL09170
         J=KEY(LL);                                                     COL09180
         IF FORCED(LL) & MOD((ABS(TRAVEL(J))/1000),1000) = K            COL09190
              THEN K2=KK;                                               COL09200
 L22:    IF TRAVEL(KK) < 0 THEN GOTO L23;                               COL09210
         KK=KK+1;                                                       COL09220
         GOTO L21;                                                      COL09230
                                                                        COL09240
 L23:    KK=K2;                                                         COL09250
         IF KK ^= 0 THEN GOTO L25;                                      COL09260
         CALL RSPEAK(140);                                              COL09270
         GOTO L2;                                                       COL09280
                                                                        COL09290
 L25:    K=MOD(ABS(TRAVEL(KK)),1000);                                   COL09300
         KK=KEY(LOC);                                                   COL09310
         GOTO L9;                                                       COL09320
                                                                        COL09330
 /*                                                                     COL09340
    LOOK.  CAN'T GIVE MORE DETAIL.  PRETEND IT WASN'T DARK              COL09350
    (THOUGH IT MAY "NOW" BE DARK) SO HE WON'T FALL INTO A PIT           COL09360
    WHILE STARING INTO THE GLOOM.                                       COL09370
 */                                                                     COL09380
                                                                        COL09390
 L30:    IF DETAIL < 3 THEN CALL RSPEAK(15);                            COL09400
         DETAIL=DETAIL+1;                                               COL09410
         WZDARK='0'B;                                                   COL09420
         ABB(LOC)=0;                                                    COL09430
         GOTO L2;                                                       COL09440
                                                                        COL09450
 /* CAVE.  DIFFERENT MESSAGES DEPENDING ON WHETHER ABOVE GROUND. */     COL09460
                                                                        COL09470
 L40:    IF LOC < 8 THEN CALL RSPEAK(57);                               COL09480
         IF LOC >= 8 THEN CALL RSPEAK(58);                              COL09490
         GOTO L2;                                                       COL09500
                                                                        COL09510
 /* NON-APPLICABLE MOTION.  VARIOUS MESSAGES DEPENDING ON               COL09520
    WORD GIVEN.  */                                                     COL09530
                                                                        COL09540
 L50:    SPK=12;                                                        COL09550
         IF K >= 43 & K <= 50 THEN SPK=9;                               COL09560
         IF K = 29 | K = 30 THEN SPK=9;                                 COL09570
         IF K = 7 | K = 36 | K = 37 THEN SPK=10;                        COL09580
         IF K = 11 | K = 19 THEN SPK=11;                                COL09590
         IF VERB = FIND | VERB = INVENT THEN SPK=59;                    COL09600
         IF K = 62 | K = 65 THEN SPK=42;                                COL09610
         IF K = 17 THEN SPK=80;                                         COL09620
         CALL RSPEAK(SPK);                                              COL09630
         GOTO L2;                                                       COL09640
                                                                        COL09650
1/*                                                                     COL09660
    "YOU'RE DEAD, JIM."                                                 COL09670
                                                                        COL09680
    IF THE CURRENT LOC IS ZERO, IT MEANS THE CLOWN GOT                  COL09690
    HIMSELF KILLED.  WE'LL ALLOW THIS MAXDIE TIMES.  MAXDIE             COL09700
    IS AUTOMATICALLY SET BASED ON THE NUMBER OF SNIDE                   COL09710
    MESSAGES AVAILABLE.  EACH DEATH RESULTS IN A MESSAGE (81,           COL09720
    83, ETC.) WHICH OFFERS REINCARNATION; IF ACCEPTED, THIS             COL09730
    RESULTS IN MESSAGE 82, 84, ETC.  THE LAST TIME, IF HE               COL09740
    WANTS ANOTHER CHANCE, HE GETS A SNIDE REMARK AS WE EXIT.            COL09750
    WHEN REINCARNATED, ALL OBJECTS BEING CARRIED GET DROPPED            COL09760
    AT OLDLC2 (PRESUMABLY THE LAST PLACE PRIOR TO BEING                 COL09770
    KILLED) WITHOUT CHANGE OF PROPS.  THE LOOP RUNS BACKWARDS           COL09780
    TO ASSURE THAT THE BIRD IS DROPPED BEFORE THE CAGE.                 COL09790
    (THIS KLUGE COULD BE CHANGED ONCE WE'RE SURE ALL                    COL09800
    REFERENCES TO BIRD AND CAGE ARE DONE BY KEYWORDS.) THE              COL09810
    LAMP IS A SPECIAL CASE (IT WOULDN'T DO TO LEAVE IT IN THE           COL09820
    CAVE).  IT IS TURNED OFF AND LEFT OUTSIDE THE BUILDING              COL09830
    (ONLY IF HE WAS CARRYING IT, OF COURSE).  HE HIMSELF IS             COL09840
    LEFT INSIDE THE BUILDING (AND HEAVEN HELP HIM IF HE TRIES           COL09850
    TO XYZZY BACK INTO THE CAVE WITHOUT THE LAMP!).  OLDLOC             COL09860
    IS ZAPPED SO HE CAN'T JUST "RETREAT".                               COL09870
                                                                        COL09880
    THE EASIEST WAY TO GET KILLED IS TO FALL INTO A PIT IN              COL09890
    PITCH DARKNESS.                                                     COL09900
 */                                                                     COL09910
                                                                        COL09920
 L90:    CALL RSPEAK(23);                                               COL09930
         OLDLC2=LOC;                                                    COL09940
                                                                        COL09950
 /* OKAY, HE'S DEAD.  LET'S GET ON WITH IT. */                          COL09960
                                                                        COL09970
 L99:    IF CLOSNG THEN GOTO L95;                                       COL09980
         YEA=YES(81+NUMDIE*2,82+NUMDIE*2,54);                           COL09990
         NUMDIE=NUMDIE+1;                                               COL10000
         IF NUMDIE = MAXDIE |  ^YEA THEN GOTO L20000;                   COL10010
         PLACE(WATER)=0;                                                COL10020
         PLACE(OIL)=0;                                                  COL10030
         IF TOTING(LAMP) THEN PROP(LAMP)=0;                             COL10040
         DO J=1 TO 100;                                                 COL10050
             I=101-J;                                                   COL10060
             IF ^TOTING(I) THEN GOTO L98;                               COL10070
             K=OLDLC2;                                                  COL10080
             IF I = LAMP THEN K=1;                                      COL10090
             CALL DROP(I,K);                                            COL10100
 L98:        END;                                                       COL10110
         LOC=3;                                                         COL10120
         OLDLOC=LOC;                                                    COL10130
         GOTO L2000;                                                    COL10140
                                                                        COL10150
 /* HE DIED DURING CLOSING TIME.  NO RESURRECTION.  TALLY UP            COL10160
    A DEATH AND EXIT.  */                                               COL10170
                                                                        COL10180
 L95:    CALL RSPEAK(131);                                              COL10190
         NUMDIE=NUMDIE+1;                                               COL10200
         GOTO L20000;                                                   COL10210
                                                                        COL10220
1/*                                                                     COL10230
    ROUTINES FOR PERFORMING THE VARIOUS ACTION VERBS                    COL10240
                                                                        COL10250
    STATEMENT NUMBERS IN THIS SECTION ARE 8000 FOR                      COL10260
    INTRANSITIVE VERBS, 9000 FOR TRANSITIVE, PLUS TEN TIMES             COL10270
    THE VERB NUMBER.  MANY INTRANSITIVE VERBS USE THE                   COL10280
    TRANSITIVE CODE, AND SOME VERBS USE CODE FOR OTHER VERBS,           COL10290
    AS NOTED BELOW.                                                     COL10300
                                                                        COL10310
    RANDOM INTRANSITIVE VERBS COME HERE.  CLEAR OBJ JUST IN             COL10320
    CASE (SEE "ATTACK").                                                COL10330
 */                                                                     COL10340
                                                                        COL10350
 L8000:  CALL A5TOA1(WD1,WD1X,TKWORD,K);                                COL10360
         CALL LINESKP;                                                  COL10370
         PUT STRING (OUTSTR) EDIT                                       COL10380
              ((TKWORD(I) DO I=1 TO K),' what?') (A,20 A);              COL10390
         CALL LINEOUT;                                                  COL10400
         OBJ=0;                                                         COL10410
         GOTO L2600;                                                    COL10420
                                                                        COL10430
 /* CARRY, NO OBJECT GIVEN YET.  OK IF ONLY ONE OBJECT PRESENT. */      COL10440
                                                                        COL10450
 L8010:  IF ATLOC(LOC) = 0 | LINK(ATLOC(LOC)) ^= 0 THEN GOTO L8000;     COL10460
         DO I=1 TO 5;                                                   COL10470
             IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L8000;             COL10480
             END;                                                       COL10490
         OBJ=ATLOC(LOC);                                                COL10500
                                                                        COL10510
 /*                                                                     COL10520
    CARRY AN OBJECT.  SPECIAL CASES FOR BIRD AND CAGE (IF               COL10530
    BIRD IN CAGE, CAN'T TAKE ONE WITHOUT THE OTHER.  LIQUIDS            COL10540
    ALSO SPECIAL, SINCE THEY DEPEND ON STATUS OF BOTTLE.                COL10550
    ALSO VARIOUS SIDE EFFECTS, ETC.                                     COL10560
 */                                                                     COL10570
                                                                        COL10580
 L9010:  IF TOTING(OBJ) THEN GOTO L2011;                                COL10590
         SPK=25;                                                        COL10600
         IF OBJ = PLANT & PROP(PLANT) <= 0 THEN SPK=115;                COL10610
         IF OBJ = BEAR & PROP(BEAR) = 1 THEN SPK=169;                   COL10620
         IF OBJ = CHAIN & PROP(BEAR) ^= 0 THEN SPK=170;                 COL10630
         IF FIXED(OBJ) ^= 0 THEN GOTO L2011;                            COL10640
         IF OBJ ^= WATER & OBJ ^= OIL THEN GOTO L9017;                  COL10650
         IF HERE(BOTTLE) & LIQ(0) = OBJ THEN GOTO L9018;                COL10660
         OBJ=BOTTLE;                                                    COL10670
         IF TOTING(BOTTLE) & PROP(BOTTLE) = 1 THEN GOTO L9220;          COL10680
         IF PROP(BOTTLE) ^= 1 THEN SPK=105;                             COL10690
         IF ^TOTING(BOTTLE) THEN SPK=104;                               COL10700
         GOTO L2011;                                                    COL10710
 L9018:  OBJ=BOTTLE;                                                    COL10720
 L9017:  IF HOLDNG < 7 THEN GOTO L9016;                                 COL10730
         CALL RSPEAK(92);                                               COL10740
         GOTO L2012;                                                    COL10750
 L9016:  IF OBJ ^= BIRD THEN GOTO L9014;                                COL10760
         IF PROP(BIRD) ^= 0 THEN GOTO L9014;                            COL10770
         IF ^TOTING(ROD) THEN GOTO L9013;                               COL10780
         CALL RSPEAK(26);                                               COL10790
         GOTO L2012;                                                    COL10800
 L9013:  IF TOTING(CAGE) THEN GOTO L9015;                               COL10810
         CALL RSPEAK(27);                                               COL10820
         GOTO L2012;                                                    COL10830
 L9015:  PROP(BIRD)=1;                                                  COL10840
 L9014:  IF (OBJ = BIRD | OBJ = CAGE) & PROP(BIRD) ^= 0                 COL10850
             THEN CALL CARRY(BIRD+CAGE-OBJ,LOC);                        COL10860
         CALL CARRY(OBJ,LOC);                                           COL10870
         K=LIQ(0);                                                      COL10880
         IF OBJ = BOTTLE & K ^= 0 THEN PLACE(K)=-1;                     COL10890
         GOTO L2009;                                                    COL10900
                                                                        COL10910
 /*                                                                     COL10920
    DISCARD OBJECT.  "THROW" ALSO COMES HERE FOR MOST                   COL10930
    OBJECTS.  SPECIAL CASES FOR BIRD (MIGHT ATTACK SNAKE OR             COL10940
    DRAGON) AND CAGE (MIGHT CONTAIN BIRD) AND VASE.  DROP               COL10950
    COINS AT VENDING MACHINE FOR EXTRA BATTERIES.                       COL10960
 */                                                                     COL10970
                                                                        COL10980
 L9020:  IF TOTING(ROD2) & OBJ = ROD &  ^ TOTING(ROD) THEN OBJ=ROD2;    COL10990
         IF ^TOTING(OBJ) THEN GOTO L2011;                               COL11000
         IF OBJ ^= BIRD |  ^ HERE(SNAKE) THEN GOTO L9024;               COL11010
         CALL RSPEAK(30);                                               COL11020
         IF CLOSED THEN GOTO L19000;                                    COL11030
         CALL DSTROY(SNAKE);                                            COL11040
                                                                        COL11050
 /* SET PROP FOR USE BY TRAVEL OPTIONS */                               COL11060
                                                                        COL11070
         PROP(SNAKE)=1;                                                 COL11080
 L9021:  K=LIQ(0);                                                      COL11090
         IF K = OBJ THEN OBJ=BOTTLE;                                    COL11100
         IF OBJ = BOTTLE & K ^= 0 THEN PLACE(K)=0;                      COL11110
         IF OBJ = CAGE & PROP(BIRD) ^= 0 THEN CALL DROP(BIRD,LOC);      COL11120
         IF OBJ = BIRD THEN PROP(BIRD)=0;                               COL11130
         CALL DROP(OBJ,LOC);                                            COL11140
         GOTO L2012;                                                    COL11150
                                                                        COL11160
 L9024:  IF OBJ ^= COINS |  ^ HERE(VEND) THEN GOTO L9025;               COL11170
         CALL DSTROY(COINS);                                            COL11180
         CALL DROP(BATTER,LOC);                                         COL11190
         CALL PSPEAK(BATTER,0);                                         COL11200
         GOTO L2012;                                                    COL11210
                                                                        COL11220
 L9025:  IF OBJ ^= BIRD |  ^ AT(DRAGON) | PROP(DRAGON) ^= 0             COL11230
                THEN GOTO L9026;                                        COL11240
         CALL RSPEAK(154);                                              COL11250
         CALL DSTROY(BIRD);                                             COL11260
         PROP(BIRD)=0;                                                  COL11270
         IF PLACE(SNAKE) = PLAC(SNAKE) THEN TALLY2=TALLY2+1;            COL11280
         GOTO L2012;                                                    COL11290
                                                                        COL11300
 L9026:  IF OBJ ^= BEAR |  ^AT(TROLL) THEN GOTO L9027;                  COL11310
         CALL RSPEAK(163);                                              COL11320
         CALL MOVE(TROLL,0);                                            COL11330
         CALL MOVE(TROLL+100,0);                                        COL11340
         CALL MOVE(TROLL2,PLAC(TROLL));                                 COL11350
         CALL MOVE(TROLL2+100,FIXD(TROLL));                             COL11360
         CALL JUGGLE(CHASM);                                            COL11370
         PROP(TROLL)=2;                                                 COL11380
         GOTO L9021;                                                    COL11390
                                                                        COL11400
 L9027:  IF OBJ = VASE & LOC ^= PLAC(PILLOW) THEN GOTO L9028;           COL11410
         CALL RSPEAK(54);                                               COL11420
         GOTO L9021;                                                    COL11430
                                                                        COL11440
 L9028:  PROP(VASE)=2;                                                  COL11450
         IF AT(PILLOW) THEN PROP(VASE)=0;                               COL11460
         CALL PSPEAK(VASE,PROP(VASE)+1);                                COL11470
         IF PROP(VASE) ^= 0 THEN FIXED(VASE)=-1;                        COL11480
         GOTO L9021;                                                    COL11490
                                                                        COL11500
 /* SAY.  ECHO WD2 (OR WD1 IF NO WD2 (SAY WHAT?, ETC.).)                COL11510
    MAGIC WORDS OVERRIDE.  */                                           COL11520
                                                                        COL11530
 L9030:  CALL A5TOA1(WD2,WD2X,TKWORD,K);                                COL11540
         IF WD2 = '     ' THEN CALL A5TOA1(WD1,WD1X,TKWORD,K);          COL11550
         IF WD2 ^= '     ' THEN WD1=WD2;                                COL11560
         I=VOCAB(WD1,-1);                                               COL11570
         IF I = 62 | I = 65 | I = 71 | I = 2025 THEN GOTO L9035;        COL11580
         CALL LINESKP;                                                  COL11590
         PUT STRING (OUTSTR) EDIT                                       COL11600
                ('Okay, "',(TKWORD(I) DO I=1 TO K),'".') (A,20 A);      COL11610
         CALL LINEOUT;                                                  COL11620
         GOTO L2012;                                                    COL11630
                                                                        COL11640
 L9035:  WD2='     ';                                                   COL11650
         OBJ=0;                                                         COL11660
         GOTO L2630;                                                    COL11670
                                                                        COL11680
 /* LOCK, UNLOCK, NO OBJECT GIVEN.  ASSUME VARIOUS THINGS IF            COL11690
    PRESENT.  */                                                        COL11700
                                                                        COL11710
 L8040:  SPK=28;                                                        COL11720
         IF HERE(CLAM) THEN OBJ=CLAM;                                   COL11730
         IF HERE(OYSTER) THEN OBJ=OYSTER;                               COL11740
         IF AT(DOOR) THEN OBJ=DOOR;                                     COL11750
         IF AT(GRATE) THEN OBJ=GRATE;                                   COL11760
         IF OBJ ^= 0 & HERE(CHAIN) THEN GOTO L8000;                     COL11770
         IF HERE(CHAIN) THEN OBJ=CHAIN;                                 COL11780
         IF OBJ = 0 THEN GOTO L2011;                                    COL11790
                                                                        COL11800
 /* LOCK, UNLOCK OBJECT.  SPECIAL STUFF FOR OPENING                     COL11810
    CLAM/OYSTER AND FOR CHAIN.  */                                      COL11820
                                                                        COL11830
 L9040:  IF OBJ = CLAM | OBJ = OYSTER THEN GOTO L9046;                  COL11840
         IF OBJ = DOOR THEN SPK=111;                                    COL11850
         IF OBJ = DOOR & PROP(DOOR) = 1 THEN SPK=54;                    COL11860
         IF OBJ = CAGE THEN SPK=32;                                     COL11870
         IF OBJ = KEYS THEN SPK=55;                                     COL11880
         IF OBJ = GRATE | OBJ = CHAIN THEN SPK=31;                      COL11890
         IF SPK ^= 31 |  ^ HERE(KEYS) THEN GOTO L2011;                  COL11900
         IF OBJ = CHAIN THEN GOTO L9048;                                COL11910
         IF ^CLOSNG THEN GOTO L9043;                                    COL11920
         K=130;                                                         COL11930
         IF ^PANIC THEN CLOCK2=15;                                      COL11940
         PANIC='1'B;                                                    COL11950
         GOTO L2010;                                                    COL11960
                                                                        COL11970
 L9043:  K=34+PROP(GRATE);                                              COL11980
         PROP(GRATE)=1;                                                 COL11990
         IF VERB = LOCK THEN PROP(GRATE)=0;                             COL12000
         K=K+2*PROP(GRATE);                                             COL12010
         GOTO L2010;                                                    COL12020
                                                                        COL12030
 /* CLAM/OYSTER. */                                                     COL12040
                                                                        COL12050
 L9046:  K=0;                                                           COL12060
         IF OBJ = OYSTER THEN K=1;                                      COL12070
         SPK=124+K;                                                     COL12080
         IF TOTING(OBJ) THEN SPK=120+K;                                 COL12090
         IF ^TOTING(TRIDNT) THEN SPK=122+K;                             COL12100
         IF VERB = LOCK THEN SPK=61;                                    COL12110
         IF SPK ^= 124 THEN GOTO L2011;                                 COL12120
         CALL DSTROY(CLAM);                                             COL12130
         CALL DROP(OYSTER,LOC);                                         COL12140
         CALL DROP(PEARL,105);                                          COL12150
         GOTO L2011;                                                    COL12160
                                                                        COL12170
 /* CHAIN. */                                                           COL12180
                                                                        COL12190
 L9048:  IF VERB = LOCK THEN GOTO L9049;                                COL12200
         SPK=171;                                                       COL12210
         IF PROP(BEAR) = 0 THEN SPK=41;                                 COL12220
         IF PROP(CHAIN) = 0 THEN SPK=37;                                COL12230
         IF SPK ^= 171 THEN GOTO L2011;                                 COL12240
         PROP(CHAIN)=0;                                                 COL12250
         FIXED(CHAIN)=0;                                                COL12260
         IF PROP(BEAR) ^= 3 THEN PROP(BEAR)=2;                          COL12270
         FIXED(BEAR)=2-PROP(BEAR);                                      COL12280
         GOTO L2011;                                                    COL12290
                                                                        COL12300
 L9049:  SPK=172;                                                       COL12310
         IF PROP(CHAIN) ^= 0 THEN SPK=34;                               COL12320
         IF LOC ^= PLAC(CHAIN) THEN SPK=173;                            COL12330
         IF SPK ^= 172 THEN GOTO L2011;                                 COL12340
         PROP(CHAIN)=2;                                                 COL12350
         IF TOTING(CHAIN) THEN CALL DROP(CHAIN,LOC);                    COL12360
         FIXED(CHAIN)=-1;                                               COL12370
         GOTO L2011;                                                    COL12380
                                                                        COL12390
 /* LIGHT LAMP */                                                       COL12400
                                                                        COL12410
 L9070:  IF ^HERE(LAMP) THEN GOTO L2011;                                COL12420
         SPK=184;                                                       COL12430
         IF LIMIT < 0 THEN GOTO L2011;                                  COL12440
         PROP(LAMP)=1;                                                  COL12450
         CALL RSPEAK(39);                                               COL12460
         IF WZDARK THEN GOTO L2000;                                     COL12470
         GOTO L2012;                                                    COL12480
                                                                        COL12490
 /* LAMP OFF */                                                         COL12500
                                                                        COL12510
 L9080:  IF ^HERE(LAMP) THEN GOTO L2011;                                COL12520
         PROP(LAMP)=0;                                                  COL12530
         CALL RSPEAK(40);                                               COL12540
         IF DARK(0) THEN CALL RSPEAK(16);                               COL12550
         GOTO L2012;                                                    COL12560
                                                                        COL12570
 /* WAVE.  NO EFFECT UNLESS WAVING ROD AT FISSURE. */                   COL12580
                                                                        COL12590
 L9090:  IF (^TOTING(OBJ)) & (OBJ ^= ROD |  ^ TOTING(ROD2))             COL12600
          THEN SPK=29;                                                  COL12610
         IF OBJ ^= ROD |  ^ AT(FISSUR) |  ^ TOTING(OBJ)                 COL12620
          | CLOSNG THEN GOTO L2011;                                     COL12630
         PROP(FISSUR)=1-PROP(FISSUR);                                   COL12640
         CALL PSPEAK(FISSUR,2-PROP(FISSUR));                            COL12650
         GOTO L2012;                                                    COL12660
                                                                        COL12670
 /*                                                                     COL12680
    ATTACK.  ASSUME TARGET IF UNAMBIGUOUS.  "THROW" ALSO                COL12690
    LINKS HERE.  ATTACKABLE OBJECTS FALL INTO TWO CATEGORIES:           COL12700
    ENEMIES (SNAKE, DWARF, ETC.) AND OTHERS (BIRD, CLAM).               COL12710
    AMBIGUOUS IF TWO ENEMIES, OR IF NO ENEMIES BUT TWO                  COL12720
    OTHERS.                                                             COL12730
 */                                                                     COL12740
                                                                        COL12750
 L9120:  DO I=1 TO 5;                                                   COL12760
             IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L9122;             COL12770
             END;                                                       COL12780
         I=0;                                                           COL12790
 L9122:  IF OBJ ^= 0 THEN GOTO L9124;                                   COL12800
         IF I ^= 0 THEN OBJ=DWARF;                                      COL12810
         IF HERE(SNAKE) THEN OBJ=OBJ*100+SNAKE;                         COL12820
         IF AT(DRAGON) & PROP(DRAGON) = 0 THEN OBJ=OBJ*100+DRAGON;      COL12830
         IF AT(TROLL) THEN OBJ=OBJ*100+TROLL;                           COL12840
         IF HERE(BEAR) & PROP(BEAR) = 0 THEN OBJ=OBJ*100+BEAR;          COL12850
         IF OBJ > 100 THEN GOTO L8000;                                  COL12860
         IF OBJ ^= 0 THEN GOTO L9124;                                   COL12870
                                                                        COL12880
 /* CAN'T ATTACK BIRD BY THROWING AXE. */                               COL12890
                                                                        COL12900
         IF HERE(BIRD) & VERB ^= THROW THEN OBJ=BIRD;                   COL12910
                                                                        COL12920
 /* CLAM AND OYSTER BOTH TREATED AS CLAM FOR INTRANSITIVE               COL12930
    CASE; NO HARM DONE.  */                                             COL12940
                                                                        COL12950
         IF HERE(CLAM) | HERE(OYSTER) THEN OBJ=100*OBJ+CLAM;            COL12960
         IF OBJ > 100 THEN GOTO L8000;                                  COL12970
 L9124:  IF OBJ ^= BIRD THEN GOTO L9125;                                COL12980
         SPK=137;                                                       COL12990
         IF CLOSED THEN GOTO L2011;                                     COL13000
         CALL DSTROY(BIRD);                                             COL13010
         PROP(BIRD)=0;                                                  COL13020
         IF PLACE(SNAKE) = PLAC(SNAKE) THEN TALLY2=TALLY2+1;            COL13030
         SPK=45;                                                        COL13040
 L9125:  IF OBJ = 0 THEN SPK=44;                                        COL13050
         IF OBJ = CLAM | OBJ = OYSTER THEN SPK=150;                     COL13060
         IF OBJ = SNAKE THEN SPK=46;                                    COL13070
         IF OBJ = DWARF THEN SPK=49;                                    COL13080
         IF OBJ = DWARF & CLOSED THEN GOTO L19000;                      COL13090
         IF OBJ = DRAGON THEN SPK=167;                                  COL13100
         IF OBJ = TROLL THEN SPK=157;                                   COL13110
         IF OBJ = BEAR THEN SPK=165+(PROP(BEAR)+1)/2;                   COL13120
         IF OBJ ^= DRAGON | PROP(DRAGON) ^= 0 THEN GOTO L2011;          COL13130
 /*                                                                     COL13140
    FUN STUFF FOR DRAGON.  IF HE INSISTS ON ATTACKING IT,               COL13150
    WIN!  SET PROP TO DEAD, MOVE DRAGON TO CENTRAL LOC (STILL           COL13160
    FIXED), MOVE RUG THERE (NOT FIXED), AND MOVE HIM THERE,             COL13170
    TOO.  THEN DO A NULL MOTION TO GET NEW DESCRIPTION.                 COL13180
 */                                                                     COL13190
         CALL RSPEAK(49);                                               COL13200
         VERB=0;                                                        COL13210
         OBJ=0;                                                         COL13220
         CALL GETIN(WD1,WD1X,WD2,WD2X);                                 COL13230
         IF WD1 ^= 'Y' & WD1 ^= 'YES' THEN GOTO L2608;                  COL13240
         CALL PSPEAK(DRAGON,1);                                         COL13250
         PROP(DRAGON)=2;                                                COL13260
         PROP(RUG)=0;                                                   COL13270
         K=(PLAC(DRAGON)+FIXD(DRAGON))/2;                               COL13280
         CALL MOVE(DRAGON+100,-1);                                      COL13290
         CALL MOVE(RUG+100,0);                                          COL13300
         CALL MOVE(DRAGON,K);                                           COL13310
         CALL MOVE(RUG,K);                                              COL13320
         DO OBJ=1 TO 100;                                               COL13330
         IF PLACE(OBJ) = PLAC(DRAGON) | PLACE(OBJ) = FIXD(DRAGON)       COL13340
              THEN CALL MOVE(OBJ,K);                                    COL13350
             END;                                                       COL13360
         LOC=K;                                                         COL13370
         K=NULLX;                                                       COL13380
         GOTO L8;                                                       COL13390
                                                                        COL13400
 /*                                                                     COL13410
    POUR.  IF NO OBJECT, OR OBJECT IS BOTTLE, ASSUME CONTENTS           COL13420
    OF BOTTLE.  SPECIAL TESTS FOR POURING WATER OR OIL ON               COL13430
    PLANT OR RUSTY DOOR.                                                COL13440
 */                                                                     COL13450
                                                                        COL13460
 L9130:  IF OBJ = BOTTLE | OBJ = 0 THEN OBJ=LIQ(0);                     COL13470
         IF OBJ = 0 THEN GOTO L8000;                                    COL13480
         IF ^TOTING(OBJ) THEN GOTO L2011;                               COL13490
         SPK=78;                                                        COL13500
         IF OBJ ^= OIL & OBJ ^= WATER THEN GOTO L2011;                  COL13510
         PROP(BOTTLE)=1;                                                COL13520
         PLACE(OBJ)=0;                                                  COL13530
         SPK=77;                                                        COL13540
         IF ^(AT(PLANT) | AT(DOOR)) THEN GOTO L2011;                    COL13550
                                                                        COL13560
         IF AT(DOOR) THEN GOTO L9132;                                   COL13570
         SPK=112;                                                       COL13580
         IF OBJ ^= WATER THEN GOTO L2011;                               COL13590
         CALL PSPEAK(PLANT,PROP(PLANT)+1);                              COL13600
         PROP(PLANT)=MOD(PROP(PLANT)+2,6);                              COL13610
         PROP(PLANT2)=PROP(PLANT)/2;                                    COL13620
         K=NULLX;                                                       COL13630
         GOTO L8;                                                       COL13640
                                                                        COL13650
 L9132:  PROP(DOOR)=0;                                                  COL13660
         IF OBJ = OIL THEN PROP(DOOR)=1;                                COL13670
         SPK=113+PROP(DOOR);                                            COL13680
         GOTO L2011;                                                    COL13690
                                                                        COL13700
 /*                                                                     COL13710
    EAT.  INTRANSITIVE:  ASSUME FOOD IF PRESENT, ELSE ASK               COL13720
    WHAT.  TRANSITIVE:  FOOD OK, SOME THINGS LOSE APPETITE,             COL13730
    REST ARE RIDICULOUS.                                                COL13740
 */                                                                     COL13750
                                                                        COL13760
 L8140:  IF ^HERE(FOOD) THEN GOTO L8000;                                COL13770
 L8142:  CALL DSTROY(FOOD);                                             COL13780
         SPK=72;                                                        COL13790
         GOTO L2011;                                                    COL13800
                                                                        COL13810
 L9140:  IF OBJ = FOOD THEN GOTO L8142;                                 COL13820
         IF OBJ = BIRD | OBJ = SNAKE | OBJ = CLAM | OBJ = OYSTER        COL13830
          | OBJ = DWARF | OBJ = DRAGON | OBJ = TROLL                    COL13840
          | OBJ = BEAR THEN SPK=71;                                     COL13850
         GOTO L2011;                                                    COL13860
                                                                        COL13870
 /*                                                                     COL13880
    DRINK.  IF NO OBJECT, ASSUME WATER AND LOOK FOR IT HERE.            COL13890
    IF WATER IS IN THE BOTTLE, DRINK THAT, ELSE MUST BE AT A            COL13900
    WATER LOC, SO DRINK STREAM.                                         COL13910
 */                                                                     COL13920
                                                                        COL13930
 L9150:  IF OBJ = 0 & LIQLOC(LOC) ^= WATER & (LIQ(0) ^= WATER           COL13940
          |  ^ HERE(BOTTLE)) THEN GOTO L8000;                           COL13950
         IF OBJ ^= 0 & OBJ ^= WATER THEN SPK=110;                       COL13960
         IF SPK = 110 | LIQ(0) ^= WATER |  ^ HERE(BOTTLE)               COL13970
              THEN GOTO L2011;                                          COL13980
         PROP(BOTTLE)=1;                                                COL13990
         PLACE(WATER)=0;                                                COL14000
         SPK=74;                                                        COL14010
         GOTO L2011;                                                    COL14020
                                                                        COL14030
 /* RUB.  YIELDS VARIOUS SNIDE REMARKS. */                              COL14040
                                                                        COL14050
 L9160:  IF OBJ ^= LAMP THEN SPK=76;                                    COL14060
         GOTO L2011;                                                    COL14070
                                                                        COL14080
 /*                                                                     COL14090
    THROW.  SAME AS DISCARD UNLESS AXE.  THEN SAME AS ATTACK            COL14100
    EXCEPT IGNORE BIRD, AND IF DWARF IS PRESENT THEN ONE                COL14110
    MIGHT BE KILLED.  (ONLY WAY TO DO SO!) AXE ALSO SPECIAL             COL14120
    FOR DRAGON, BEAR, AND TROLL.  TREASURES SPECIAL FOR                 COL14130
    TROLL.                                                              COL14140
 */                                                                     COL14150
                                                                        COL14160
 L9170:  IF TOTING(ROD2) & OBJ = ROD &  ^ TOTING(ROD) THEN OBJ=ROD2;    COL14170
         IF ^TOTING(OBJ) THEN GOTO L2011;                               COL14180
         IF OBJ >= 50 & OBJ <= MAXTRS & AT(TROLL) THEN GOTO L9178;      COL14190
         IF OBJ = FOOD & HERE(BEAR) THEN GOTO L9177;                    COL14200
         IF OBJ ^= AXE THEN GOTO L9020;                                 COL14210
         DO I=1 TO 5;                                                   COL14220
                                                                        COL14230
 /* NEEDN'T CHECK DFLAG IF AXE IS HERE. */                              COL14240
                                                                        COL14250
             IF DLOC(I) = LOC THEN GOTO L9172;                          COL14260
             END;                                                       COL14270
         SPK=152;                                                       COL14280
         IF AT(DRAGON) & PROP(DRAGON) = 0 THEN GOTO L9175;              COL14290
         SPK=158;                                                       COL14300
         IF AT(TROLL) THEN GOTO L9175;                                  COL14310
         IF HERE(BEAR) & PROP(BEAR) = 0 THEN GOTO L9176;                COL14320
         OBJ=0;                                                         COL14330
         GOTO L9120;                                                    COL14340
                                                                        COL14350
 L9172:  SPK=48;                                                        COL14360
                                                                        COL14370
                                                                        COL14380
         IF RAN(3) = 0 THEN GO TO L9175;                                COL14390
         DSEEN(I)='0'B;                                                 COL14400
         DLOC(I)=0;                                                     COL14410
         SPK=47;                                                        COL14420
         DKILL=DKILL+1;                                                 COL14430
         IF DKILL = 1 THEN SPK=149;                                     COL14440
 L9175:  CALL RSPEAK(SPK);                                              COL14450
         CALL DROP(AXE,LOC);                                            COL14460
         K=NULLX;                                                       COL14470
         GOTO L8;                                                       COL14480
                                                                        COL14490
 /* THIS'LL TEACH HIM TO THROW THE AXE AT THE BEAR! */                  COL14500
                                                                        COL14510
 L9176:  SPK=164;                                                       COL14520
         CALL DROP(AXE,LOC);                                            COL14530
         FIXED(AXE)=-1;                                                 COL14540
         PROP(AXE)=1;                                                   COL14550
         CALL JUGGLE(BEAR);                                             COL14560
         GOTO L2011;                                                    COL14570
                                                                        COL14580
 /* BUT THROWING FOOD IS ANOTHER STORY. */                              COL14590
                                                                        COL14600
 L9177:  OBJ=BEAR;                                                      COL14610
         GOTO L9210;                                                    COL14620
                                                                        COL14630
 L9178:  SPK=159;                                                       COL14640
                                                                        COL14650
 /* SNARF A TREASURE FOR THE TROLL. */                                  COL14660
                                                                        COL14670
         CALL DROP(OBJ,0);                                              COL14680
         CALL MOVE(TROLL,0);                                            COL14690
         CALL MOVE(TROLL+100,0);                                        COL14700
         CALL DROP(TROLL2,PLAC(TROLL));                                 COL14710
         CALL DROP(TROLL2+100,FIXD(TROLL));                             COL14720
         CALL JUGGLE(CHASM);                                            COL14730
         GOTO L2011;                                                    COL14740
                                                                        COL14750
 /* QUIT.  INTRANSITIVE ONLY.  VERIFY INTENT AND EXIT IF                COL14760
    THAT'S WHAT HE WANTS.  */                                           COL14770
                                                                        COL14780
 L8180:  GAVEUP=YES(22,54,54);                                          COL14790
 L8185:  IF GAVEUP THEN GOTO L20000;                                    COL14800
         GOTO L2012;                                                    COL14810
                                                                        COL14820
 /* FIND.  MIGHT BE CARRYING IT, OR IT MIGHT BE HERE.  ELSE             COL14830
    GIVE CAVEAT.  */                                                    COL14840
                                                                        COL14850
 L9190:  IF AT(OBJ) | (LIQ(0) = OBJ & AT(BOTTLE))                       COL14860
          | K = LIQLOC(LOC) THEN SPK=94;                                COL14870
         DO I=1 TO 5;                                                   COL14880
             IF DLOC(I) = LOC & DFLAG >= 2 & OBJ = DWARF THEN SPK=94;   COL14890
             END;                                                       COL14900
         IF CLOSED THEN SPK=138;                                        COL14910
         IF TOTING(OBJ) THEN SPK=24;                                    COL14920
         GOTO L2011;                                                    COL14930
                                                                        COL14940
 /* INVENTORY.  IF OBJECT, TREAT SAME AS FIND.  ELSE REPORT             COL14950
    ON CURRENT BURDEN.  */                                              COL14960
                                                                        COL14970
 L8200:  SPK=98;                                                        COL14980
         DO I=1 TO 100;                                                 COL14990
            IF I = BEAR |  ^ TOTING(I) THEN GOTO L8201;                 COL15000
            IF SPK = 98 THEN CALL RSPEAK(99);                           COL15010
            BLKLIN='0'B;                                                COL15020
            CALL PSPEAK(I,-1);                                          COL15030
            BLKLIN='1'B;                                                COL15040
            SPK=0;                                                      COL15050
 L8201:     END;                                                        COL15060
         IF TOTING(BEAR) THEN SPK=141;                                  COL15070
         GOTO L2011;                                                    COL15080
                                                                        COL15090
 /*                                                                     COL15100
 FEED.  IF BIRD, NO SEED.  SNAKE, DRAGON, TROLL:  QUIP.  IF             COL15110
    DWARF, MAKE HIM MAD.  BEAR, SPECIAL.                                COL15120
 */                                                                     COL15130
                                                                        COL15140
 L9210:  IF OBJ ^= BIRD THEN GOTO L9212;                                COL15150
         SPK=100;                                                       COL15160
         GOTO L2011;                                                    COL15170
                                                                        COL15180
 L9212: IF OBJ ^= SNAKE & OBJ ^= DRAGON & OBJ ^= TROLL THEN GOTO L9213; COL15190
         SPK=102;                                                       COL15200
         IF OBJ = DRAGON & PROP(DRAGON) ^= 0 THEN SPK=110;              COL15210
         IF OBJ = TROLL THEN SPK=182;                                   COL15220
         IF OBJ ^= SNAKE | CLOSED |  ^ HERE(BIRD) THEN GOTO L2011;      COL15230
         SPK=101;                                                       COL15240
         CALL DSTROY(BIRD);                                             COL15250
         PROP(BIRD)=0;                                                  COL15260
         TALLY2=TALLY2+1;                                               COL15270
         GOTO L2011;                                                    COL15280
                                                                        COL15290
 L9213:  IF OBJ ^= DWARF THEN GOTO L9214;                               COL15300
         IF ^HERE(FOOD) THEN GOTO L2011;                                COL15310
         SPK=103;                                                       COL15320
         DFLAG=DFLAG+1;                                                 COL15330
         GOTO L2011;                                                    COL15340
                                                                        COL15350
 L9214:  IF OBJ ^= BEAR THEN GOTO L9215;                                COL15360
         IF PROP(BEAR) = 0 THEN SPK=102;                                COL15370
         IF PROP(BEAR) = 3 THEN SPK=110;                                COL15380
         IF ^HERE(FOOD) THEN GOTO L2011;                                COL15390
         CALL DSTROY(FOOD);                                             COL15400
         PROP(BEAR)=1;                                                  COL15410
         FIXED(AXE)=0;                                                  COL15420
         PROP(AXE)=0;                                                   COL15430
         SPK=168;                                                       COL15440
         GOTO L2011;                                                    COL15450
                                                                        COL15460
 L9215:  SPK=14;                                                        COL15470
         GOTO L2011;                                                    COL15480
                                                                        COL15490
 /* FILL.  BOTTLE MUST BE EMPTY, AND SOME LIQUID AVAILABLE.             COL15500
    (VASE IS NASTY.) */                                                 COL15510
                                                                        COL15520
 L9220:  IF OBJ = VASE THEN GOTO L9222;                                 COL15530
         IF OBJ ^= 0 & OBJ ^= BOTTLE THEN GOTO L2011;                   COL15540
         IF OBJ = 0 &  ^ HERE(BOTTLE) THEN GOTO L8000;                  COL15550
         SPK=107;                                                       COL15560
         IF LIQLOC(LOC) = 0 THEN SPK=106;                               COL15570
         IF LIQ(0) ^= 0 THEN SPK=105;                                   COL15580
         IF SPK ^= 107 THEN GOTO L2011;                                 COL15590
         PROP(BOTTLE)=MOD(COND(LOC),4)/2;                               COL15600
         PROP(BOTTLE)=PROP(BOTTLE)*2;                                   COL15610
         K=LIQ(0);                                                      COL15620
         IF TOTING(BOTTLE) THEN PLACE(K)=-1;                            COL15630
         IF K = OIL THEN SPK=108;                                       COL15640
         GOTO L2011;                                                    COL15650
                                                                        COL15660
 L9222:  SPK=29;                                                        COL15670
         IF LIQLOC(LOC) = 0 THEN SPK=144;                               COL15680
         IF LIQLOC(LOC) = 0 |  ^TOTING(VASE) THEN GOTO L2011;           COL15690
         CALL RSPEAK(145);                                              COL15700
         PROP(VASE)=2;                                                  COL15710
         FIXED(VASE)=-1;                                                COL15720
         GOTO L9024;                                                    COL15730
                                                                        COL15740
 /* BLAST.  NO EFFECT UNLESS YOU'VE GOT DYNAMITE, WHICH IS A            COL15750
    NEAT TRICK!  */                                                     COL15760
                                                                        COL15770
 L9230:  IF PROP(ROD2) < 0 |  ^ CLOSED THEN GOTO L2011;                 COL15780
         BONUS=133;                                                     COL15790
         IF LOC = 115 THEN BONUS=134;                                   COL15800
         IF HERE(ROD2) THEN BONUS=135;                                  COL15810
         CALL RSPEAK(BONUS);                                            COL15820
         GOTO L20000;                                                   COL15830
                                                                        COL15840
 /* SCORE.  GO TO SCORING SECTION, WHICH WILL RETURN TO 8241            COL15850
    IF SCORNG IS TRUE.  */                                              COL15860
                                                                        COL15870
 L8240:  SCORNG='1'B;                                                   COL15880
         GOTO L20000;                                                   COL15890
                                                                        COL15900
 L8241:  SCORNG='0'B;                                                   COL15910
         CALL LINESKP;                                                  COL15920
         PUT STRING (OUTSTR) EDIT                                       COL15930
              ('If you were to quit now, you would score ',             COL15940
             SCORE,' out of a possible',MXSCOR,'.') (A,F(4),A,F(4),A);  COL15950
         CALL LINEOUT;                                                  COL15960
         GAVEUP=YES(143,54,54);                                         COL15970
         GOTO L8185;                                                    COL15980
                                                                        COL15990
 /*                                                                     COL16000
    FEE FIE FOE FOO (AND FUM).  ADVANCE TO NEXT STATE IF GIVEN          COL16010
    IN PROPER ORDER.  LOOK UP WD1 IN SECTION 3 OF VOCAB TO              COL16020
    DETERMINE WHICH WORD WE'VE GOT.  LAST WORD ZIPS THE EGGS            COL16030
    BACK TO THE GIANT ROOM (UNLESS ALREADY THERE).                      COL16040
 */                                                                     COL16050
                                                                        COL16060
 L8250:  K=VOCAB(WD1,3);                                                COL16070
         SPK=42;                                                        COL16080
         IF FOOBAR = 1-K THEN GOTO L8252;                               COL16090
         IF FOOBAR ^= 0 THEN SPK=151;                                   COL16100
         GOTO L2011;                                                    COL16110
                                                                        COL16120
 L8252:  FOOBAR=K;                                                      COL16130
         IF K ^= 4 THEN GOTO L2009;                                     COL16140
         FOOBAR=0;                                                      COL16150
         IF PLACE(EGGS) = PLAC(EGGS)                                    COL16160
          | (TOTING(EGGS) & LOC = PLAC(EGGS)) THEN GOTO L2011;          COL16170
                                                                        COL16180
 /* BRING BACK TROLL IF WE STEAL THE EGGS BACK FROM HIM                 COL16190
    BEFORE CROSSING.  */                                                COL16200
                                                                        COL16210
         IF PLACE(EGGS) = 0 & PLACE(TROLL) = 0 & PROP(TROLL) = 0        COL16220
          THEN PROP(TROLL)=1;                                           COL16230
         K=2;                                                           COL16240
         IF HERE(EGGS) THEN K=1;                                        COL16250
         IF LOC = PLAC(EGGS) THEN K=0;                                  COL16260
         CALL MOVE(EGGS,PLAC(EGGS));                                    COL16270
         CALL PSPEAK(EGGS,K);                                           COL16280
         GOTO L2012;                                                    COL16290
                                                                        COL16300
 /* BRIEF.  INTRANSITIVE ONLY.  SUPPRESS LONG DESCRIPTIONS              COL16310
    AFTER FIRST TIME.  */                                               COL16320
                                                                        COL16330
 L8260:  SPK=156;                                                       COL16340
         ABBNUM=10000;                                                  COL16350
         DETAIL=3;                                                      COL16360
         GOTO L2011;                                                    COL16370
                                                                        COL16380
 /* READ.  MAGAZINES IN DWARVISH, MESSAGE WE'VE SEEN, AND .             COL16390
    .  .  OYSTER?  */                                                   COL16400
                                                                        COL16410
 L8270:  IF HERE(MAGZIN) THEN OBJ=MAGZIN;                               COL16420
         IF HERE(TABLET) THEN OBJ=OBJ*100+TABLET;                       COL16430
         IF HERE(MESSAG) THEN OBJ=OBJ*100+MESSAG;                       COL16440
         IF CLOSED & TOTING(OYSTER) THEN OBJ=OYSTER;                    COL16450
         IF OBJ > 100 | OBJ = 0 | DARK(0) THEN GOTO L8000;              COL16460
                                                                        COL16470
 L9270:  IF DARK(0) THEN GOTO L5190;                                    COL16480
         IF OBJ = MAGZIN THEN SPK=190;                                  COL16490
         IF OBJ = TABLET THEN SPK=196;                                  COL16500
         IF OBJ = MESSAG THEN SPK=191;                                  COL16510
         IF OBJ = OYSTER & HINTED(2) & TOTING(OYSTER) THEN SPK=194;     COL16520
         IF OBJ ^= OYSTER | HINTED(2) |  ^TOTING(OYSTER)                COL16530
          |  ^CLOSED THEN GOTO L2011;                                   COL16540
         HINTED(2)=YES(192,193,54);                                     COL16550
         GOTO L2012;                                                    COL16560
                                                                        COL16570
 /* BREAK.  ONLY WORKS FOR MIRROR IN REPOSITORY AND, OF                 COL16580
    COURSE, THE VASE.  */                                               COL16590
                                                                        COL16600
 L9280:  IF OBJ = MIRROR THEN SPK=148;                                  COL16610
         IF OBJ = VASE & PROP(VASE) = 0 THEN GOTO L9282;                COL16620
         IF OBJ ^= MIRROR |  ^CLOSED THEN GOTO L2011;                   COL16630
         CALL RSPEAK(197);                                              COL16640
         GOTO L19000;                                                   COL16650
                                                                        COL16660
 L9282:  SPK=198;                                                       COL16670
         IF TOTING(VASE) THEN CALL DROP(VASE,LOC);                      COL16680
         PROP(VASE)=2;                                                  COL16690
         FIXED(VASE)=-1;                                                COL16700
         GOTO L2011;                                                    COL16710
                                                                        COL16720
 /* WAKE.  ONLY USE IS TO DISTURB THE DWARVES. */                       COL16730
                                                                        COL16740
 L9290:  IF OBJ ^= DWARF |  ^CLOSED THEN GOTO L2011;                    COL16750
         CALL RSPEAK(199);                                              COL16760
         GOTO L19000;                                                   COL16770
                                                                        COL16780
 /*                                                                     COL16790
    SUSPEND.                                                            COL16800
 */                                                                     COL16810
                                                                        COL16820
 L8300: /* PUT STRING (OUTSTR) EDIT                                     COL16830
               ('Can''t suspend on this machine') (A);                  COL16840
         CALL LINEOUT;      */                                          COL16850
     turns = turns - 1 ;                                                COL16860
  CALL TREAD( 'Enter a filename for the game to be saved: ', 43,        COL16870
     FN2,FNLEN,CCODE);                                                  COL16880
                                                                        COL16890
     IF FNLEN ^= 0 THEN   DO ;                                          COL16900
     fn = '        '; fn = substr(fn2,1,min(8,fnlen)) ;                 COL16910
     CALL SAVEFL( FN,'SAVEFILE','A ' ,                                  COL16920
            TXTCOM.RTEXT(1), 49070,                                     COL16930
            BLKCOM.BLKLIN, 4 ,                                          COL16940
            PTXCOM.PTEXT(1), 400,                                       COL16950
            VOCCOM.KTAB(1), 3900,                                       COL16960
            PLACOM.ATLOC(1), 2204,                                      COL16970
            ABBCOM.ABB(1), 600,                                         COL16980
            PICWORD,16,                                                 COL16990
            ADVARS.ABBNUM, 8207,                                        COL17000
                 IRC ) ;                                                COL17010
         end ;                                                          COL17020
     if (fnlen = 0 | irc ^= 0 ) then do ;                               COL17030
     turns = turns + 1 ;                                                COL17040
     CALL TREAD(                                                        COL17050
  'Save attempt failed, do you want to try again? ', 47,                COL17060
     fn2,fnLEN,CCODE);                                                  COL17070
     if substr(fn2,1,1) = 'Y' then goto l8300 ;                         COL17080
     turns = turns -1 ;                                                 COL17090
         GO TO L2012;                                                   COL17100
     end ;                                                              COL17110
     put string(outstr) edit ('OK. Game is saved in ' || compress(      COL17120
       FN || ' ' || FT || ' ' || FM) || '. Let''s continue ...') (A);   COL17130
         CALL LINEOUT;                                                  COL17140
         GO TO L2012;                                                   COL17150
                                                                        COL17160
 /* HOURS.  REPORT CURRENT NON-PRIME-TIME HOURS. */                     COL17170
                                                                        COL17180
 L8310:  PUT STRING (OUTSTR) EDIT ('Open all day!') (A);                COL17190
         CALL LINEOUT;                                                  COL17200
         GOTO L2012;                                                    COL17210
                                                                        COL17220
 /* LOG.  TOGGLE LOGGIN EITHER ON OR OFF */                             COL17230
                                                                        COL17240
 SETLOG: LOGON = ^ LOGON;                                               COL17250
         IF LOGON THEN PUT STRING (OUTSTR) EDIT ('Log on.') (A);        COL17260
                  ELSE PUT STRING (OUTSTR) EDIT ('Log off.') (A);       COL17270
         CALL LINEOUT;                                                  COL17280
         CALL LINESKP;                                                  COL17290
         GO TO L2012;                                                   COL17300
                                                                        COL17310
                                                                        COL17320
 L8320:                   /* RESUME - GO ASK FOR SAVED GAME */          COL17330
                                                                        COL17340
     CALL TREAD(                                                        COL17350
  'Enter FILENAME of saved game: ', 30, FN2,FNLEN,CCODE);               COL17360
                                                                        COL17370
     IF FNLEN = 0 THEN  GOTO L8320 ;                                    COL17380
                                                                        COL17390
  /*PUT EDIT ('FN2 IS "'||SUBSTR(FN2,1,FNLEN)||'"') (SKIP,A) ; */       COL17400
     FN = '        ';                                                   COL17410
     FN = SUBSTR(FN2,1,MIN(FNLEN,8)) ;                                  COL17420
     CALL GETFL( FN,FT, FM,                                             COL17430
            TXTCOM.RTEXT(1), 49070,                                     COL17440
            BLKCOM.BLKLIN, 4 ,                                          COL17450
            PTXCOM.PTEXT(1), 400,                                       COL17460
            VOCCOM.KTAB(1), 3900,                                       COL17470
            PLACOM.ATLOC(1), 2204,                                      COL17480
            ABBCOM.ABB(1), 600,                                         COL17490
            PICWORD,16,                                                 COL17500
            ADVARS.ABBNUM, 8207,                                        COL17510
                 IRC ) ;                                                COL17520
                                                                        COL17530
    IF IRC ^= 0 THEN DO ;                                               COL17540
 PUT STRING (OUTSTR) EDIT ('Error: unable to re-load saved game, RC=',  COL17550
        IRC) (A,F(8));                                                  COL17560
                                                                        COL17570
    CALL LINEOUT;                                                       COL17580
    CALL TREAD( 'Do you want another try? ', 25,  FN2,FNLEN,CCODE);     COL17590
                                                                        COL17600
    IF SUBSTR(FN2,1,1) = 'Y' THEN GOTO L8320;                           COL17610
 /*  ELSE STOP ;  */                                                    COL17620
        end ;                                                           COL17630
                                                                        COL17640
         DETAIL=DETAIL+1;                                               COL17650
         WZDARK='0'B;                                                   COL17660
         ABB(LOC)=0;                                                    COL17670
         GOTO L2;                                                       COL17680
                                                                        COL17690
                                                                        COL17700
1/*                                                                     COL17710
    HINTS                                                               COL17720
                                                                        COL17730
    COME HERE IF HE'S BEEN LONG ENOUGH AT REQUIRED LOC(S) FOR           COL17740
    SOME UNUSED HINT.  HINT NUMBER IS IN VARIABLE "HINT".               COL17750
    BRANCH TO QUICK TEST FOR ADDITIONAL CONDITIONS, THEN COME           COL17760
    BACK TO DO NEAT STUFF.  GOTO 40010 IF CONDITIONS ARE MET            COL17770
    AND WE WANT TO OFFER THE HINT.  GOTO 40020 TO CLEAR                 COL17780
    HINTLC BACK TO ZERO, 40030 TO TAKE NO ACTION YET.                   COL17790
 */                                                                     COL17800
                                                                        COL17810
 L40000: SELECT (HINT-4);                                               COL17820
             WHEN (00) GO TO L40400;        /* CAVE */                  COL17830
             WHEN (01) GO TO L40500;        /* BIRD */                  COL17840
             WHEN (02) GO TO L40600;        /* SNAKE */                 COL17850
             WHEN (03) GO TO L40700;        /* MAZE */                  COL17860
             WHEN (04) GO TO L40800;        /* DARK */                  COL17870
             WHEN (05) GO TO L40900;        /* WITT */                  COL17880
             END;                                                       COL17890
         CALL BUG(27);                                                  COL17900
                                                                        COL17910
 L40010: HINTLC(HINT)=0;                                                COL17920
         IF ^YES(HINTS(HINT,3),0,54) THEN GOTO L2602;                   COL17930
         CALL LINESKP;                                                  COL17940
         PUT STRING (OUTSTR) EDIT                                       COL17950
           ('I am prepared to give you a hint, but it will cost you',   COL17960
              HINTS(HINT,2),' points.') (A,F(2),A);                     COL17970
         CALL LINEOUT;                                                  COL17980
         HINTED(HINT)=YES(175,HINTS(HINT,4),54);                        COL17990
         IF HINTED(HINT) & LIMIT > 30                                   COL18000
                THEN LIMIT=LIMIT+30*HINTS(HINT,2);                      COL18010
 L40020: HINTLC(HINT)=0;                                                COL18020
 L40030: GOTO L2602;                                                    COL18030
                                                                        COL18040
 /* NOW FOR THE QUICK TESTS.  SEE DATABASE DESCRIPTION FOR              COL18050
    ONE-LINE NOTES.  */                                                 COL18060
                                                                        COL18070
 L40400: IF PROP(GRATE) = 0 &  ^ HERE(KEYS) THEN GOTO L40010;           COL18080
         GOTO L40020;                                                   COL18090
                                                                        COL18100
 L40500: IF HERE(BIRD) & TOTING(ROD) & OBJ = BIRD THEN GOTO L40010;     COL18110
         GOTO L40030;                                                   COL18120
                                                                        COL18130
 L40600: IF HERE(SNAKE) &  ^ HERE(BIRD) THEN GOTO L40010;               COL18140
         GOTO L40020;                                                   COL18150
                                                                        COL18160
 L40700: IF ATLOC(LOC) = 0 & ATLOC(OLDLOC) = 0                          COL18170
          & ATLOC(OLDLC2) = 0 & HOLDNG > 1 THEN GOTO L40010;            COL18180
         GOTO L40020;                                                   COL18190
                                                                        COL18200
 L40800: IF PROP(EMRALD) ^= -1 & PROP(PYRAM) = -1 THEN GOTO L40010;     COL18210
         GOTO L40020;                                                   COL18220
                                                                        COL18230
 L40900: GOTO L40010;                                                   COL18240
                                                                        COL18250
1/*                                                                     COL18260
    CAVE CLOSING AND SCORING                                            COL18270
                                                                        COL18280
                                                                        COL18290
    THESE SECTIONS HANDLE THE CLOSING OF THE CAVE.  THE CAVE            COL18300
    CLOSES "CLOCK1" TURNS AFTER THE LAST TREASURE HAS BEEN              COL18310
    LOCATED (INCLUDING THE PIRATE'S CHEST, WHICH MAY OF                 COL18320
    COURSE NEVER SHOW UP).  NOTE THAT THE TREASURES NEED NOT            COL18330
    HAVE BEEN TAKEN YET, JUST LOCATED.  HENCE CLOCK1 MUST BE            COL18340
    LARGE ENOUGH TO GET OUT OF THE CAVE (IT ONLY TICKS WHILE            COL18350
    INSIDE THE CAVE).  WHEN IT HITS ZERO, WE BRANCH TO 10000            COL18360
    TO START CLOSING THE CAVE, AND THEN SIT BACK AND WAIT FOR           COL18370
    HIM TO TRY TO GET OUT.  IF HE DOESN'T WITHIN CLOCK2                 COL18380
    TURNS, WE CLOSE THE CAVE; IF HE DOES TRY, WE ASSUME HE              COL18390
    PANICS, AND GIVE HIM A FEW ADDITIONAL TURNS TO GET                  COL18400
    FRANTIC BEFORE WE CLOSE.  WHEN CLOCK2 HITS ZERO, WE                 COL18410
    BRANCH TO 11000 TO TRANSPORT HIM INTO THE FINAL PUZZLE.             COL18420
    NOTE THAT THE PUZZLE DEPENDS UPON ALL SORTS OF RANDOM               COL18430
    THINGS.  FOR INSTANCE, THERE MUST BE NO WATER OR OIL,               COL18440
    SINCE THERE ARE BEANSTALKS WHICH WE DON'T WANT TO BE ABLE           COL18450
    TO WATER, SINCE THE CODE CAN'T HANDLE IT.  ALSO, WE CAN             COL18460
    HAVE NO KEYS, SINCE THERE IS A GRATE (HAVING MOVED THE              COL18470
    FIXED OBJECT!) THERE SEPARATING HIM FROM ALL THE                    COL18480
    TREASURES.  MOST OF THESE PROBLEMS ARISE FROM THE USE OF            COL18490
    NEGATIVE PROP NUMBERS TO SUPPRESS THE OBJECT DESCRIPTIONS           COL18500
    UNTIL HE'S ACTUALLY MOVED THE OBJECTS.                              COL18510
                                                                        COL18520
    WHEN THE FIRST WARNING COMES, WE LOCK THE GRATE, DESTROY            COL18530
    THE BRIDGE, KILL ALL THE DWARVES (AND THE PIRATE), REMOVE           COL18540
    THE TROLL AND BEAR (UNLESS DEAD), AND SET "CLOSNG" TO               COL18550
    TRUE.  LEAVE THE DRAGON; TOO MUCH TROUBLE TO MOVE IT.               COL18560
    FROM NOW UNTIL CLOCK2 RUNS OUT, HE CANNOT UNLOCK THE                COL18570
    GRATE, MOVE TO ANY LOCATION OUTSIDE THE CAVE (LOC<9), OR            COL18580
    CREATE THE BRIDGE.  NOR CAN HE BE RESURRECTED IF HE DIES.           COL18590
    NOTE THAT THE SNAKE IS ALREADY GONE, SINCE HE GOT TO THE            COL18600
    TREASURE ACCESSIBLE ONLY VIA THE HALL OF THE MT.  KING.             COL18610
    ALSO, HE'S BEEN IN GIANT ROOM (TO GET EGGS), SO WE CAN              COL18620
    REFER TO IT.  ALSO ALSO, HE'S GOTTEN THE PEARL, SO WE               COL18630
    KNOW THE BIVALVE IS AN OYSTER.  *AND*, THE DWARVES MUST             COL18640
    HAVE BEEN ACTIVATED, SINCE WE'VE FOUND CHEST.                       COL18650
 */                                                                     COL18660
                                                                        COL18670
 L10000: PROP(GRATE)=0;                                                 COL18680
         PROP(FISSUR)=0;                                                COL18690
         DO I=1 TO 6;                                                   COL18700
             DSEEN(I)='0'B;                                             COL18710
             END;                                                       COL18720
         CALL MOVE(TROLL,0);                                            COL18730
         CALL MOVE(TROLL+100,0);                                        COL18740
         CALL MOVE(TROLL2,PLAC(TROLL));                                 COL18750
         CALL MOVE(TROLL2+100,FIXD(TROLL));                             COL18760
         CALL JUGGLE(CHASM);                                            COL18770
         IF PROP(BEAR) ^= 3 THEN CALL DSTROY(BEAR);                     COL18780
         PROP(CHAIN)=0;                                                 COL18790
         FIXED(CHAIN)=0;                                                COL18800
         PROP(AXE)=0;                                                   COL18810
         FIXED(AXE)=0;                                                  COL18820
         CALL RSPEAK(129);                                              COL18830
         CLOCK1=-1;                                                     COL18840
         CLOSNG='1'B;                                                   COL18850
         GOTO L19999;                                                   COL18860
                                                                        COL18870
 /*                                                                     COL18880
    ONCE HE'S PANICKED, AND CLOCK2 HAS RUN OUT, WE COME HERE            COL18890
    TO SET UP THE STORAGE ROOM.  THE ROOM HAS TWO LOCS,                 COL18900
    HARDWIRED AS 115 (NE) AND 116 (SW).  AT THE NE END, WE              COL18910
    PLACE EMPTY BOTTLES, A NURSERY OF PLANTS, A BED OF                  COL18920
    OYSTERS, A PILE OF LAMPS, RODS WITH STARS, SLEEPING                 COL18930
    DWARVES, AND HIM.  AND THE SW END WE PLACE GRATE OVER               COL18940
    TREASURES, SNAKE PIT, COVEY OF CAGED BIRDS, MORE RODS,              COL18950
    AND PILLOWS.  A MIRROR STRETCHES ACROSS ONE WALL.  MANY             COL18960
    OF THE OBJECTS COME FROM KNOWN LOCATIONS AND/OR STATES              COL18970
    (E.G.  THE SNAKE IS KNOWN TO HAVE BEEN DESTROYED AND                COL18980
    NEEDN'T BE CARRIED AWAY FROM ITS OLD "PLACE"), MAKING THE           COL18990
    VARIOUS OBJECTS BE HANDLED DIFFERENTLY.  WE ALSO DROP ALL           COL19000
    OTHER OBJECTS HE MIGHT BE CARRYING (LEST HE HAVE SOME               COL19010
    WHICH COULD CAUSE TROUBLE, SUCH AS THE KEYS).  WE                   COL19020
    DESCRIBE THE FLASH OF LIGHT AND TRUNDLE BACK.                       COL19030
 */                                                                     COL19040
                                                                        COL19050
 L11000: PROP(BOTTLE)=PUT(BOTTLE,115,1);                                COL19060
         PROP(PLANT)=PUT(PLANT,115,0);                                  COL19070
         PROP(OYSTER)=PUT(OYSTER,115,0);                                COL19080
         PROP(LAMP)=PUT(LAMP,115,0);                                    COL19090
         PROP(ROD)=PUT(ROD,115,0);                                      COL19100
         PROP(DWARF)=PUT(DWARF,115,0);                                  COL19110
         LOC=115;                                                       COL19120
         OLDLOC=115;                                                    COL19130
         NEWLOC=115;                                                    COL19140
                                                                        COL19150
 /* LEAVE THE GRATE WITH NORMAL (NON-NEGATIVE PROPERTY). */             COL19160
                                                                        COL19170
         FOO=PUT(GRATE,116,0);                                          COL19180
         PROP(SNAKE)=PUT(SNAKE,116,1);                                  COL19190
         PROP(BIRD)=PUT(BIRD,116,1);                                    COL19200
         PROP(CAGE)=PUT(CAGE,116,0);                                    COL19210
         PROP(ROD2)=PUT(ROD2,116,0);                                    COL19220
         PROP(PILLOW)=PUT(PILLOW,116,0);                                COL19230
                                                                        COL19240
         PROP(MIRROR)=PUT(MIRROR,115,0);                                COL19250
         FIXED(MIRROR)=116;                                             COL19260
                                                                        COL19270
         DO I=1 TO 100;                                                 COL19280
             IF TOTING(I) THEN CALL DSTROY(I);                          COL19290
             END;                                                       COL19300
                                                                        COL19310
         CALL RSPEAK(132);                                              COL19320
         CLOSED='1'B;                                                   COL19330
         GOTO L2;                                                       COL19340
                                                                        COL19350
 /*                                                                     COL19360
    ANOTHER WAY WE CAN FORCE AN END TO THINGS IS BY HAVING              COL19370
    THE LAMP GIVE OUT.  WHEN IT GETS CLOSE, WE COME HERE TO             COL19380
    WARN HIM.  WE GO TO 12000 IF THE LAMP AND FRESH BATTERIES           COL19390
    ARE HERE, IN WHICH CASE WE REPLACE THE BATTERIES AND                COL19400
    CONTINUE.  12200 IS FOR OTHER CASES OF LAMP DYING.  12400           COL19410
    IS WHEN IT GOES OUT, AND 12600 IS IF HE'S WANDERED                  COL19420
    OUTSIDE AND THE LAMP IS USED UP, IN WHICH CASE WE FORCE             COL19430
    HIM TO GIVE UP.                                                     COL19440
 */                                                                     COL19450
                                                                        COL19460
 L12000: CALL RSPEAK(188);                                              COL19470
         PROP(BATTER)=1;                                                COL19480
         IF TOTING(BATTER) THEN CALL DROP(BATTER,LOC);                  COL19490
         LIMIT=LIMIT+2500;                                              COL19500
         LMWARN='0'B;                                                   COL19510
         GOTO L19999;                                                   COL19520
                                                                        COL19530
 L12200: IF LMWARN |  ^HERE(LAMP) THEN GOTO L19999;                     COL19540
         LMWARN='1'B;                                                   COL19550
         SPK=187;                                                       COL19560
         IF PLACE(BATTER) = 0 THEN SPK=183;                             COL19570
         IF PROP(BATTER) = 1 THEN SPK=189;                              COL19580
         CALL RSPEAK(SPK);                                              COL19590
         GOTO L19999;                                                   COL19600
                                                                        COL19610
 L12400: LIMIT=-1;                                                      COL19620
         PROP(LAMP)=0;                                                  COL19630
         IF HERE(LAMP) THEN CALL RSPEAK(184);                           COL19640
         GOTO L19999;                                                   COL19650
                                                                        COL19660
 L12600: CALL RSPEAK(185);                                              COL19670
         GAVEUP='1'B;                                                   COL19680
         GOTO L20000;                                                   COL19690
                                                                        COL19700
 /* OH DEAR, HE'S DISTURBED THE DWARVES. */                             COL19710
                                                                        COL19720
 L19000: CALL RSPEAK(136);                                              COL19730
                                                                        COL19740
 /*                                                                     COL19750
    EXIT CODE.  WILL EVENTUALLY INCLUDE SCORING.  FOR NOW, HOWEVER, ... COL19760
                                                                        COL19770
    THE PRESENT SCORING ALGORITHM IS AS FOLLOWS:                        COL19780
       OBJECTIVE:          POINTS:        PRESENT TOTAL POSSIBLE:       COL19790
    GETTING WELL INTO CAVE   25                    25                   COL19800
    EACH TREASURE < CHEST    12                    60                   COL19810
    TREASURE CHEST ITSELF    14                    14                   COL19820
    EACH TREASURE > CHEST    16                   144                   COL19830
    SURVIVING             (MAX-NUM)*10             30                   COL19840
    NOT QUITTING              4                     4                   COL19850
    REACHING "CLOSNG"        25                    25                   COL19860
    "CLOSED": QUIT/KILLED    10                                         COL19870
              KLUTZED        25                                         COL19880
              WRONG WAY      30                                         COL19890
              SUCCESS        45                    45                   COL19900
    CAME TO WITT'S END        1                     1                   COL19910
    ROUND OUT THE TOTAL       2                     2                   COL19920
                                         TOTAL:   350                   COL19930
    (POINTS CAN ALSO BE DEDUCTED FOR USING HINTS.)                      COL19940
 */                                                                     COL19950
                                                                        COL19960
 L20000: SCORE=0;                                                       COL19970
         MXSCOR=0;                                                      COL19980
                                                                        COL19990
 /*                                                                     COL20000
    FIRST TALLY UP THE TREASURES.  MUST BE IN BUILDING AND              COL20010
    NOT BROKEN.  GIVE THE POOR GUY 2 POINTS JUST FOR FINDING            COL20020
    EACH TREASURE.                                                      COL20030
 */                                                                     COL20040
                                                                        COL20050
         DO I=50 TO MAXTRS;                                             COL20060
             IF PTEXT(I) ^= 0 THEN DO;                                  COL20070
                 K=12;                                                  COL20080
                 IF I = CHEST THEN K=14;                                COL20090
                 IF I > CHEST THEN K=16;                                COL20100
                 IF PROP(I) >= 0 THEN SCORE=SCORE+2;                    COL20110
                 IF PLACE(I) = 3 & PROP(I) = 0 THEN SCORE=SCORE+K-2;    COL20120
                 MXSCOR=MXSCOR+K;                                       COL20130
                 END;                                                   COL20140
             END;                                                       COL20150
                                                                        COL20160
 /*                                                                     COL20170
    NOW LOOK AT HOW HE FINISHED AND HOW FAR HE GOT.  MAXDIE             COL20180
    AND NUMDIE TELL US HOW WELL HE SURVIVED.  GAVEUP SAYS               COL20190
    WHETHER HE EXITED VIA QUIT.  DFLAG WILL TELL US IF HE               COL20200
    EVER GOT SUITABLY DEEP INTO THE CAVE.  CLOSNG STILL                 COL20210
    INDICATES WHETHER HE REACHED THE ENDGAME.  AND IF HE GOT            COL20220
    AS FAR AS "CAVE CLOSED" (INDICATED BY "CLOSED"), THEN               COL20230
    BONUS IS ZERO FOR MUNDANE EXITS OR 133, 134, 135 IF HE              COL20240
    BLEW IT (SO TO SPEAK).                                              COL20250
 */                                                                     COL20260
                                                                        COL20270
         SCORE=SCORE+(MAXDIE-NUMDIE)*10;                                COL20280
         MXSCOR=MXSCOR+MAXDIE*10;                                       COL20290
         IF ^(SCORNG | GAVEUP) THEN SCORE=SCORE+4;                      COL20300
         MXSCOR=MXSCOR+4;                                               COL20310
         IF DFLAG ^= 0 THEN SCORE=SCORE+25;                             COL20320
         MXSCOR=MXSCOR+25;                                              COL20330
         IF CLOSNG THEN SCORE=SCORE+25;                                 COL20340
         MXSCOR=MXSCOR+25;                                              COL20350
         IF ^CLOSED THEN GOTO L20020;                                   COL20360
         IF BONUS = 0 THEN SCORE=SCORE+10;                              COL20370
         IF BONUS = 135 THEN SCORE=SCORE+25;                            COL20380
         IF BONUS = 134 THEN SCORE=SCORE+30;                            COL20390
         IF BONUS = 133 THEN SCORE=SCORE+45;                            COL20400
 L20020: MXSCOR=MXSCOR+45;                                              COL20410
                                                                        COL20420
 /* DID HE COME TO WITT'S END AS HE SHOULD? */                          COL20430
                                                                        COL20440
         IF PLACE(MAGZIN) = 108 THEN SCORE=SCORE+1;                     COL20450
         MXSCOR=MXSCOR+1;                                               COL20460
                                                                        COL20470
 /* ROUND IT OFF. */                                                    COL20480
                                                                        COL20490
         SCORE=SCORE+2;                                                 COL20500
         MXSCOR=MXSCOR+2;                                               COL20510
                                                                        COL20520
 /* DEDUCT POINTS FOR HINTS.  HINTS < 4 ARE SPECIAL; SEE                COL20530
    DATABASE DESCRIPTION.  */                                           COL20540
                                                                        COL20550
         DO I=1 TO HNTMAX;                                              COL20560
             IF HINTED(I) THEN SCORE=SCORE-HINTS(I,2);                  COL20570
             END;                                                       COL20580
                                                                        COL20590
 /* RETURN TO SCORE COMMAND IF THAT'S WHERE WE CAME FROM. */            COL20600
                                                                        COL20610
         IF SCORNG THEN GOTO L8241;                                     COL20620
                                                                        COL20630
 /* THAT SHOULD BE GOOD ENOUGH.  LET'S TELL HIM ALL ABOUT IT. */        COL20640
                                                                        COL20650
         CALL LINESKP;                                                  COL20660
         CALL LINESKP;                                                  COL20670
         CALL LINESKP;                                                  COL20680
         PUT STRING (OUTSTR) EDIT                                       COL20690
             ('You scored',SCORE,' out of a possible',                  COL20700
             MXSCOR,' using',TURNS,' turns.')                           COL20710
            (A,F(4),A,F(4),A,F(4),A);                                   COL20720
         CALL LINEOUT;                                                  COL20730
                                                                        COL20740
         DO I=1 TO CLSSES;                                              COL20750
             IF CVAL(I) >= SCORE THEN GOTO L20210;                      COL20760
             END;                                                       COL20770
         CALL LINESKP;                                                  COL20780
         PUT STRING (OUTSTR) EDIT ('You just went of my scale!!') (A);  COL20790
         CALL LINEOUT;                                                  COL20800
         GOTO L25000;                                                   COL20810
                                                                        COL20820
 L20210: CALL SPEAK(CTEXT(I));                                          COL20830
         IF I = CLSSES-1 THEN GOTO L20220;                              COL20840
         K=CVAL(I)+1-SCORE;                                             COL20850
         KKWORD='s.';                                                   COL20860
         IF K = 1 THEN KKWORD='. ';                                     COL20870
         CALL LINESKP;                                                  COL20880
         PUT STRING (OUTSTR) EDIT                                       COL20890
             ('To achieve the next higher rating, you need',            COL20900
                K,' more point',KKWORD) (A,F(3),A,A(2));                COL20910
         CALL LINEOUT;                                                  COL20920
         GOTO L25000;                                                   COL20930
                                                                        COL20940
 L20220: CALL LINESKP;                                                  COL20950
         PUT STRING (OUTSTR) EDIT                                       COL20960
          ('To achieve the next higher rating would be a neat trick!')  COL20970
                (A);                                                    COL20980
         CALL LINEOUT;                                                  COL20990
         CALL LINESKP;                                                  COL21000
         PUT STRING (OUTSTR) EDIT ('Congratulations!!') (A);            COL21010
         CALL LINEOUT;                                                  COL21020
                                                                        COL21030
 L25000: CALL LINESKP;                                                  COL21040
         STOP;                                                          COL21050
1/*  SUBROUTINES/FUNCTIONS                                              COL21060
                                                                        COL21070
                                                                        COL21080
    TOTING(OBJ)  = TRUE IF THE OBJ IS BEING CARRIED                     COL21090
    HERE(OBJ)    = TRUE IF THE OBJ IS AT "LOC" (OR IS BEING CARRIED)    COL21100
    AT(OBJ)      = TRUE IF ON EITHER SIDE OF TWO-PLACED OBJECT          COL21110
    LIQ(DUMMY)   = OBJECT NUMBER OF LIQUID IN BOTTLE                    COL21120
    LIQLOC(LOC)  = OBJECT NUMBER OF LIQUID (IF ANY) AT LOC              COL21130
    BITSET(L,N)  = TRUE IF COND(L) HAS BIT N SET (BIT 0 IS UNITS BIT)   COL21140
    FORCED(LOC)  = TRUE IF LOC MOVES WITHOUT ASKING FOR INPUT (COND=2)  COL21150
    DARK(DUMMY)  = TRUE IF LOCATION "LOC" IS DARK                       COL21160
    PCT(N)       = TRUE N% OF THE TIME (N INTEGER FROM 0 TO 100)        COL21170
                                                                        COL21180
 */                                                                     COL21190
                                                                        COL21200
 TOTING: PROC (OBJ) RETURNS (BIT(1));                                   COL21210
                                                                        COL21220
         DCL OBJ FIXED BIN(31);                                         COL21230
                                                                        COL21240
         RETURN(PLACE(OBJ) = -1);                                       COL21250
         END;                                                           COL21260
                                                                        COL21270
 HERE: PROC (OBJ) RETURNS (BIT(1));                                     COL21280
                                                                        COL21290
         DCL OBJ FIXED BIN(31);                                         COL21300
                                                                        COL21310
         RETURN(PLACE(OBJ) = LOC | TOTING(OBJ));                        COL21320
         END;                                                           COL21330
                                                                        COL21340
 AT: PROC (OBJ) RETURNS (BIT(1));                                       COL21350
                                                                        COL21360
         DCL OBJ FIXED BIN (31);                                        COL21370
                                                                        COL21380
         RETURN(PLACE(OBJ) = LOC | FIXED (OBJ) = LOC);                  COL21390
         END;                                                           COL21400
                                                                        COL21410
 LIQ2: PROC (PBOTL) RETURNS (FIXED BIN(31));                            COL21420
                                                                        COL21430
         DCL PBOTL FIXED BIN(31);                                       COL21440
         DCL LIQ2TEMP FIXED BIN(31);                                    COL21450
                                                                        COL21460
         LIQ2TEMP=PBOTL/2;                                              COL21470
         RETURN((1-PBOTL)*WATER+(LIQ2TEMP)*(WATER+OIL));                COL21480
         END;                                                           COL21490
                                                                        COL21500
 LIQ: PROC (DUMMY) RETURNS (FIXED BIN(31));                             COL21510
                                                                        COL21520
         DCL DUMMY FIXED BIN(31);                                       COL21530
                                                                        COL21540
         RETURN(LIQ2(MAX(PROP(BOTTLE),-1-PROP(BOTTLE))));               COL21550
         END;                                                           COL21560
                                                                        COL21570
 LIQLOC: PROC (LOC) RETURNS (FIXED BIN(31));                            COL21580
                                                                        COL21590
         DCL LOC FIXED BIN(31);                                         COL21600
         DCL (LIQTEMP1,LIQTEMP2) FIXED BIN(31);                         COL21610
                                                                        COL21620
         LIQTEMP1=COND(LOC)/2;                                          COL21630
         LIQTEMP1=LIQTEMP1*2;                                           COL21640
         LIQTEMP2=COND(LOC)/4;                                          COL21650
         RETURN(LIQ2((MOD(LIQTEMP1,8)-5)*MOD(LIQTEMP2,2)+1));           COL21660
         END;                                                           COL21670
                                                                        COL21680
 BITSET: PROC (L,N) RETURNS (BIT(1));                                   COL21690
                                                                        COL21700
         DCL (L,N) FIXED BIN(31);                                       COL21710
         DCL BITTEMP FIXED BIN(31) STATIC;                              COL21720
                                                                        COL21730
         BITTEMP=COND(L)/2**N;                                          COL21740
         RETURN(MOD(BITTEMP,2) ^= 0);                                   COL21750
         END;                                                           COL21760
                                                                        COL21770
 FORCED: PROC (LOC) RETURNS (BIT(1));                                   COL21780
                                                                        COL21790
         DCL LOC FIXED BIN(31);                                         COL21800
                                                                        COL21810
         RETURN(COND(LOC) = 2);                                         COL21820
         END;                                                           COL21830
                                                                        COL21840
 DARK: PROC (DUMMY) RETURNS (BIT(1));                                   COL21850
                                                                        COL21860
         DCL DUMMY FIXED BIN(31);                                       COL21870
                                                                        COL21880
         RETURN(MOD(COND(LOC),2) = 0 &                                  COL21890
              (PROP(LAMP) = 0 | ^ HERE(LAMP)));                         COL21900
         END;                                                           COL21910
                                                                        COL21920
 PCT: PROC (N) RETURNS (BIT(1));                                        COL21930
                                                                        COL21940
         DCL N FIXED BIN(31);                                           COL21950
                                                                        COL21960
         RETURN(RAN(100) < N);                                          COL21970
         END;                                                           COL21980
1/* I/O ROUTINES (SPEAK, PSPEAK, RSPEAK, GETIN, YES, A5TOA1) */         COL21990
                                                                        COL22000
                                                                        COL22010
 SPEAK: PROC (N);                                                       COL22020
                                                                        COL22030
         DCL N FIXED BIN(31);                                           COL22040
         DCL (I,K,L) FIXED BIN (31);                                    COL22050
                                                                        COL22060
 /*                                                                     COL22070
    PRINT THE MESSAGE WHICH STARTS AT LINES(N).  PRECEDE IT             COL22080
    WITH A BLANK LINE UNLESS BLKLIN IS FALSE.                           COL22090
 */                                                                     COL22100
                                                                        COL22110
         IF N = 0 THEN RETURN;                                          COL22120
         IF LINES(N+1) = '>$<' THEN RETURN;                             COL22130
         IF (BLKLIN) THEN CALL LINESKP;                                 COL22140
         K=N;                                                           COL22150
 L1:     L=ABS(LINES(K))-1;                                             COL22160
         K=K+1;                                                         COL22170
         PUT STRING (OUTSTR) EDIT ((LINES(I) DO I=K TO L)) (14 A(5));   COL22180
         CALL LINEOUT;                                                  COL22190
         K=L+1;                                                         COL22200
         IF LINES(K) >= 0 THEN GOTO L1;                                 COL22210
         RETURN;                                                        COL22220
         END;                                                           COL22230
                                                                        COL22240
                                                                        COL22250
                                                                        COL22260
 PSPEAK:PROC (MSG,SKIP);                                                COL22270
                                                                        COL22280
         DCL (MSG,SKIP) FIXED BIN(31);                                  COL22290
         DCL (I,M) FIXED BIN (31);                                      COL22300
                                                                        COL22310
 /*                                                                     COL22320
    FIND THE SKIP+1ST MESSAGE FROM MSG AND PRINT IT.  MSG               COL22330
    SHOULD BE THE INDEX OF THE INVENTORY MESSAGE FOR OBJECT.            COL22340
    (INVEN+N+1 MESSAGE IS PROP=N MESSAGE).                              COL22350
 */                                                                     COL22360
                                                                        COL22370
         M=PTEXT(MSG);                                                  COL22380
         IF SKIP < 0 THEN GOTO L9;                                      COL22390
         DO I=0 TO SKIP;                                                COL22400
 L1:         M=ABS(LINES(M));                                           COL22410
             IF LINES(M) >= 0 THEN GOTO L1;                             COL22420
             END;                                                       COL22430
 L9:     CALL SPEAK(M);                                                 COL22440
         RETURN;                                                        COL22450
         END;                                                           COL22460
                                                                        COL22470
                                                                        COL22480
                                                                        COL22490
 RSPEAK: PROC (I);                                                      COL22500
                                                                        COL22510
         DCL I FIXED BIN(31);                                           COL22520
                                                                        COL22530
 /* PRINT THE I-TH "RANDOM" MESSAGE (SECTION 6 OF DATABASE). */         COL22540
                                                                        COL22550
         IF I ^= 0 THEN CALL SPEAK(RTEXT(I));                           COL22560
         RETURN;                                                        COL22570
         END;                                                           COL22580
                                                                        COL22590
 GETIN: PROC (WORD1,WORD1X,WORD2,WORD2X);                               COL22600
                                                                        COL22610
 /*                                                                     COL22620
    GET A COMMAND FROM THE ADVENTURER.  SNARF OUT THE FIRST             COL22630
    WORD, PAD IT WITH BLANKS, AND RETURN IT IN WORD1.  CHARS            COL22640
    6 THRU 10 ARE RETURNED IN WORD1X, IN CASE WE NEED TO                COL22650
    PRINT OUT THE WHOLE WORD IN AN ERROR MESSAGE.  ANY NUMBER           COL22660
    OF BLANKS MAY FOLLOW THE WORD.  IF A SECOND WORD APPEARS,           COL22670
    IT IS RETURNED IN WORD2 (CHARS 6 THRU 10 IN WORD2X), ELSE           COL22680
    WORD2 IS SET TO ZERO.                                               COL22690
 */                                                                     COL22700
                                                                        COL22710
         DCL (WORD1,WORD1X,WORD2,WORD2X) CHAR(5);                       COL22720
                                                                        COL22730
         WORD1,WORD1X,WORD2,WORD2X='     ';                             COL22740
         IF LOGON THEN PUT SKIP;                                        COL22750
         WORDSTRT=0;                                                    COL22760
         DO WHILE (WORDSTRT = 0);                                       COL22770
             IF BLKLIN THEN CALL LINESKP;                               COL22780
             CALL TREAD(INSTR,0,INSTR,INLEN,CCODE);                     COL22790
             IF CCODE = 1 THEN DO;                                      COL22800
                 OUTSTR=SUBSTR(INSTR,1,INLEN);                          COL22810
                 WORDSTRT=VERIFY(OUTSTR,' ');                           COL22820
                 END;                                                   COL22830
             ELSE DO;                                                   COL22840
                 IF BLKLIN THEN CALL LINESKP;                           COL22850
                 PUT STRING (OUTSTR) EDIT                               COL22860
                    ('Terminal error..reenter.') (A);                   COL22870
                 CALL LINEOUT;                                          COL22880
                 END;                                                   COL22890
             END;                                                       COL22900
         IF LOGON THEN PUT SKIP EDIT (OUTSTR) (A);                      COL22910
         OUTSTR=SUBSTR(OUTSTR,WORDSTRT);                                COL22920
         WORDEND=INDEX(OUTSTR,' ')-1;                                   COL22930
         IF WORDEND=-1 THEN WORDEND=LENGTH(OUTSTR);                     COL22940
         WORDSIZE=MIN(WORDEND,5);                                       COL22950
         WORD1=SUBSTR(OUTSTR,1,WORDSIZE);                               COL22960
         IF WORDEND > 5 THEN DO;                                        COL22970
             WORDSIZE=MIN(WORDEND-5,5);                                 COL22980
             WORD1X=SUBSTR(OUTSTR,6,WORDSIZE);                          COL22990
             END;                                                       COL23000
         IF WORDEND=LENGTH(OUTSTR) THEN RETURN;                         COL23010
         OUTSTR=SUBSTR(OUTSTR,WORDEND+1);                               COL23020
         WORDSTRT=VERIFY(OUTSTR,' ');                                   COL23030
         IF WORDSTRT = 0 THEN RETURN;                                   COL23040
         OUTSTR=SUBSTR(OUTSTR,WORDSTRT);                                COL23050
         WORDEND=INDEX(OUTSTR,' ')-1;                                   COL23060
         IF WORDEND = -1 THEN WORDEND=LENGTH(OUTSTR);                   COL23070
         WORDSIZE=MIN(WORDEND,5);                                       COL23080
         WORD2=SUBSTR(OUTSTR,1,WORDSIZE);                               COL23090
         IF WORDEND > 5 THEN DO;                                        COL23100
             WORDSIZE=MIN(WORDEND-5,5);                                 COL23110
             WORD2X=SUBSTR(OUTSTR,6,WORDSIZE);                          COL23120
             END;                                                       COL23130
         RETURN;                                                        COL23140
         END;                                                           COL23150
                                                                        COL23160
                                                                        COL23170
                                                                        COL23180
 YES: PROC (X,Y,Z) RETURNS (BIT(1));                                    COL23190
                                                                        COL23200
         DCL (X,Y,Z) FIXED BIN(31);                                     COL23210
                                                                        COL23220
 /*                                                                     COL23230
    PRINT MESSAGE X, WAIT FOR YES/NO ANSWER.  IF YES, PRINT Y           COL23240
    AND LEAVE YEA TRUE; IF NO, PRINT Z AND LEAVE YEA FALSE.             COL23250
 */                                                                     COL23260
                                                                        COL23270
                                                                        COL23280
 L1:     IF X ^= 0 THEN CALL RSPEAK(X);                                 COL23290
         CALL GETIN(REPLY,JUNK1,JUNK2,JUNK3);                           COL23300
         IF REPLY = 'YES' | REPLY = 'Y' THEN GOTO L10;                  COL23310
         IF REPLY = 'NO' | REPLY = 'N' THEN GOTO L20;                   COL23320
         CALL LINESKP;                                                  COL23330
         PUT STRING (OUTSTR) EDIT ('Please answer the question!') (A);  COL23340
         CALL LINEOUT;                                                  COL23350
         GOTO L1;                                                       COL23360
 L10:    IF Y ^= 0 THEN CALL RSPEAK(Y);                                 COL23370
         RETURN('1'B);                                                  COL23380
 L20:    IF Z ^=0 THEN CALL RSPEAK(Z);                                  COL23390
         RETURN('0'B);                                                  COL23400
         END;                                                           COL23410
                                                                        COL23420
                                                                        COL23430
                                                                        COL23440
 A5TOA1: PROC (A,B,CHARS,LENG);                                         COL23450
                                                                        COL23460
 /*                                                                     COL23470
   A AND B CONTAN A 1-10 CHARACTER WORD IN A5 FORMAT.                   COL23480
   THEY ARE CONCATENATED AND MOVED INTO A CHAR(1)                       COL23490
   ARRAY UNTIL A BLANK IS ENCOUNTERED.  THE TOTAL                       COL23500
   LENGTH IS RETURNED IN LENG.                                          COL23510
                                                                        COL23520
 */                                                                     COL23530
                                                                        COL23540
         DCL (A,B) CHAR(5);                                             COL23550
         DCL LENG FIXED BIN(31);                                        COL23560
         DCL CHARS(10) CHAR(1);                                         COL23570
                                                                        COL23580
         DCL WORDS(2) CHAR(5);                                          COL23590
         DCL XLATETO CHAR(26) INIT ('abcdefghijklmnopqrstuvwxyz');      COL23600
         DCL XLATEFR CHAR(26) INIT ('ABCDEFGHIJKLMNOPQRSTUVWXYZ');      COL23610
                                                                        COL23620
         WORDS(1)=TRANSLATE(A,XLATETO,XLATEFR);                         COL23630
         WORDS(2)=TRANSLATE(B,XLATETO,XLATEFR);                         COL23640
         LENG=0;                                                        COL23650
         DO WORD=1 TO 2;                                                COL23660
             DO CH=1 TO 5;                                              COL23670
                 CHARS(LENG+1)=SUBSTR(WORDS(WORD),CH,1);                COL23680
                 IF CHARS(LENG+1) = ' ' THEN RETURN;                    COL23690
                 LENG=LENG+1;                                           COL23700
                 END;                                                   COL23710
             END;                                                       COL23720
         RETURN;                                                        COL23730
         END;                                                           COL23740
1/*                                                                     COL23750
    DATA STRUCTURE ROUTINES (VOCAB, DSTROY, JUGGLE, MOVE,               COL23760
    PUT, CARRY, DROP)                                                   COL23770
 */                                                                     COL23780
                                                                        COL23790
 VOCAB: PROC (ID,INIT) RETURNS(FIXED BIN(31));                          COL23800
                                                                        COL23810
         DCL ID CHAR(5);                                                COL23820
         DCL INIT FIXED BIN(31);                                        COL23830
         DCL I    FIXED BIN(31);                                        COL23840
                                                                        COL23850
 /*                                                                     COL23860
    LOOK UP ID IN THE VOCABULARY (ATAB) AND RETURN ITS                  COL23870
    "DEFINITION" (KTAB), OR -1 IF NOT FOUND.  IF INIT IS                COL23880
    POSITIVE, THIS IS AN INITIALISATION CALL SETTING UP A               COL23890
    KEYWORD VARIABLE, AND NOT FINDING IT CONSTITUTES A BUG.             COL23900
    IT ALSO MEANS THAT ONLY KTAB VALUES WHICH TAKEN OVER 1000           COL23910
    EQUAL INIT MAY BE CONSIDERED.  (THUS "STEPS", WHICH IS A            COL23920
    MOTION VERB AS WELL AS AN OBJECT, MAY BE LOCATED AS AN              COL23930
    OBJECT.)  AND IT ALSO MEANS THE KTAB VALUE IS TAKEN MOD             COL23940
    1000.                                                               COL23950
 */                                                                     COL23960
                                                                        COL23970
        DCL VOCRTN FIXED BIN(31);                                       COL23980
                                                                        COL23990
         DO I=1 TO TABSIZ;                                              COL24000
             IF KTAB(I) = -1 THEN GOTO L2;                              COL24010
             IF INIT >= 0 & KTAB(I)/1000 ^= INIT THEN GOTO L1;          COL24020
             IF ATAB(I) = ID THEN GOTO L3;                              COL24030
 L1:         END;                                                       COL24040
         CALL BUG(21);                                                  COL24050
                                                                        COL24060
 L2:     IF INIT < 0 THEN RETURN(-1);                                   COL24070
         CALL BUG(5);                                                   COL24080
                                                                        COL24090
 L3:     VOCRTN=KTAB(I);                                                COL24100
         IF INIT >= 0 THEN VOCRTN=MOD(VOCRTN,1000);                     COL24110
         RETURN(VOCRTN);                                                COL24120
         END;                                                           COL24130
                                                                        COL24140
                                                                        COL24150
                                                                        COL24160
 DSTROY: PROC (OBJECT);                                                 COL24170
                                                                        COL24180
         DCL OBJECT FIXED BIN(31);                                      COL24190
                                                                        COL24200
 /*                                                                     COL24210
    PERMANENTLY ELIMINATE "OBJECT" BY MOVING TO A                       COL24220
    NON-EXISTANT LOCATION.                                              COL24230
 */                                                                     COL24240
                                                                        COL24250
                                                                        COL24260
         CALL MOVE(OBJECT,0);                                           COL24270
         RETURN;                                                        COL24280
         END;                                                           COL24290
                                                                        COL24300
                                                                        COL24310
                                                                        COL24320
 JUGGLE: PROC (OBJECT);                                                 COL24330
                                                                        COL24340
         DCL OBJECT FIXED BIN(31);                                      COL24350
         DCL (I,J)  FIXED BIN(31);                                      COL24360
                                                                        COL24370
 /*                                                                     COL24380
    JUGGLE AN OBJECT BY PICKING IT UP AND PUTTING IT DOWN               COL24390
    AGAIN, THE PURPOSE BEING TO GET THE OBJECT TO THE FRONT             COL24400
    OF THE CHAIN OF THINGS AT ITS LOC.                                  COL24410
 */                                                                     COL24420
                                                                        COL24430
         I=PLACE(OBJECT);                                               COL24440
         J=FIXED(OBJECT);                                               COL24450
         CALL MOVE(OBJECT,I);                                           COL24460
         CALL MOVE(OBJECT+100,J);                                       COL24470
         RETURN;                                                        COL24480
         END;                                                           COL24490
                                                                        COL24500
                                                                        COL24510
                                                                        COL24520
 MOVE: PROC (OBJECT,WHERE);                                             COL24530
                                                                        COL24540
         DCL (OBJECT,WHERE) FIXED BIN(31);                              COL24550
                                                                        COL24560
 /*                                                                     COL24570
    PLACE ANY OBJECT ANYWHERE BY PICKING IT UP AND DROPPING             COL24580
    IT.  MAY ALREADY BE TOTING, IN WHICH CASE THE CARRY IS A            COL24590
    NO-OP.  MUSTN'T PICK UP OBJECTS WHICH ARE NOT AT ANY LOC,           COL24600
    SINCE CARRY WANTS TO REMOVE OBJECTS FROM ATLOC CHAINS.              COL24610
 */                                                                     COL24620
                                                                        COL24630
         IF OBJECT > 100 THEN GOTO L1;                                  COL24640
         FROM=PLACE(OBJECT);                                            COL24650
         GOTO L2;                                                       COL24660
 L1:     FROM=FIXED(OBJECT-100);                                        COL24670
 L2:     IF FROM > 0 & FROM <= 300 THEN CALL CARRY(OBJECT,FROM);        COL24680
         CALL DROP(OBJECT,WHERE);                                       COL24690
         RETURN;                                                        COL24700
         END;                                                           COL24710
                                                                        COL24720
                                                                        COL24730
                                                                        COL24740
 PUT: PROC (OBJECT,WHERE,PVAL) RETURNS(FIXED BIN(31));                  COL24750
                                                                        COL24760
         DCL (OBJECT,WHERE,PVAL) FIXED BIN(31);                         COL24770
                                                                        COL24780
 /*                                                                     COL24790
    PUT IS THE SAME AS MOVE, EXCEPT IT RETURNS A VALUE USED             COL24800
    TO SET UP THE NEGATED PROP VALUES FOR THE REPOSITORY                COL24810
    OBJECTS.                                                            COL24820
 */                                                                     COL24830
                                                                        COL24840
         CALL MOVE(OBJECT,WHERE);                                       COL24850
         RETURN((-1)-PVAL);                                             COL24860
         END;                                                           COL24870
                                                                        COL24880
                                                                        COL24890
                                                                        COL24900
 CARRY: PROC (OBJECT,WHERE);                                            COL24910
                                                                        COL24920
         DCL (OBJECT,WHERE) FIXED BIN(31);                              COL24930
                                                                        COL24940
 /*                                                                     COL24950
    START TOTING AN OBJECT, REMOVING IT FROM THE LIST OF                COL24960
    THINGS AT ITS FORMER LOCATION.  INCR HOLDNG UNLESS IT WAS           COL24970
    ALREADY BEING TOTED.  IF OBJECT>100 (MOVING "FIXED"                 COL24980
    SECOND LOC), DON'T CHANGE PLACE OR HOLDNG.                          COL24990
 */                                                                     COL25000
                                                                        COL25010
                                                                        COL25020
                                                                        COL25030
         IF OBJECT > 100 THEN GOTO L5;                                  COL25040
         IF PLACE(OBJECT) = -1 THEN RETURN;                             COL25050
         PLACE(OBJECT)=-1;                                              COL25060
         HOLDNG=HOLDNG+1;                                               COL25070
 L5:     IF ATLOC(WHERE) ^= OBJECT THEN GOTO L6;                        COL25080
         ATLOC(WHERE)=LINK(OBJECT);                                     COL25090
         RETURN;                                                        COL25100
 L6:     TEMP=ATLOC(WHERE);                                             COL25110
 L7:     IF LINK(TEMP) = OBJECT THEN GOTO L8;                           COL25120
         TEMP=LINK(TEMP);                                               COL25130
         GOTO L7;                                                       COL25140
 L8:     LINK(TEMP)=LINK(OBJECT);                                       COL25150
         RETURN;                                                        COL25160
         END;                                                           COL25170
                                                                        COL25180
                                                                        COL25190
                                                                        COL25200
 DROP: PROC (OBJECT,WHERE);                                             COL25210
                                                                        COL25220
         DCL (OBJECT,WHERE) FIXED BIN(31);                              COL25230
                                                                        COL25240
 /*                                                                     COL25250
    PLACE AN OBJECT AT A GIVEN LOC, PREFIXING IT ONTO THE               COL25260
    ATLOC LIST.  DECR HOLDNG IF THE OBJECT WAS BEING TOTED.             COL25270
 */                                                                     COL25280
                                                                        COL25290
         IF OBJECT > 100 THEN GOTO L1;                                  COL25300
         IF PLACE(OBJECT) = -1 THEN HOLDNG=HOLDNG-1;                    COL25310
         PLACE(OBJECT)=WHERE;                                           COL25320
         GOTO L2;                                                       COL25330
 L1:     FIXED(OBJECT-100)=WHERE;                                       COL25340
 L2:     IF WHERE <= 0 THEN RETURN;                                     COL25350
         LINK(OBJECT)=ATLOC(WHERE);                                     COL25360
         ATLOC(WHERE)=OBJECT;                                           COL25370
         RETURN;                                                        COL25380
         END;                                                           COL25390
                                                                        COL25400
1/*  UTILITY ROUTINES (RAN, CIAO, BUG) */                               COL25410
                                                                        COL25420
 CIAO: PROC;                                                            COL25430
                                                                        COL25440
 /*                                                                     COL25450
    EXITS...NO MESSAGE OUTPUT SINCE CAN'T SAVE CORE IMAGE               COL25460
 */                                                                     COL25470
                                                                        COL25480
         STOP;                                                          COL25490
         END;                                                           COL25500
                                                                        COL25510
                                                                        COL25520
                                                                        COL25530
 BUG: PROC (NUM);                                                       COL25540
                                                                        COL25550
         DCL NUM FIXED BIN(31);                                         COL25560
                                                                        COL25570
 /*                                                                     COL25580
    THE FOLLOWING CONDITIONS ARE CURRENTLY CONSIDERED FATAL             COL25590
    BUGS.  NUMBERS < 20 ARE DETECTED WHILE READING THE                  COL25600
    DATABASE; THE OTHERS OCCUR AT "RUN TIME".                           COL25610
         0       MESSAGE LINE > 70 CHARACTERS                           COL25620
         1       NULL LINE IN MESSAGE                                   COL25630
         2       TOO MANY WORDS OF MESSAGES                             COL25640
         3       TOO MANY TRAVEL OPTIONS                                COL25650
         4       TOO MANY VOCABULARY WORDS                              COL25660
         5       REQUIRED VOCABULARY WORD NOT FOUND                     COL25670
         6       TOO MANY RTEXT OR MTEXT MESSAGES                       COL25680
         7       TOO MANY HINTS                                         COL25690
         8       LOCATION HAS COND BIT BEING SET TWICE                  COL25700
         9       INVALID SECTION NUMBER IN DATABASE                     COL25710
         20      SPECIAL TRAVEL (500>L>300) EXCEEDS GOTO LIST           COL25720
         21      RAN OFF END OF VOCABULARY TABLE                        COL25730
         22      VOCABULARY TYPE (N/1000) NOT BETWEEN 0 AND 3           COL25740
         23      INTRANSITIVE ACTION VERB EXCEEDS GOTO LIST             COL25750
         24      TRANSITIVE ACTION VERB EXCEEDS GOTO LIST               COL25760
         25      CONDITIONAL TRAVEL ENTRY WITH NO ALTERNATIVE           COL25770
         26      LOCATION HAS NO TRAVEL ENTRIES                         COL25780
         27      HINT NUMBER EXCEEDS GOTO LIST                          COL25790
         28      INVALID MONTH RETURNED BY DATE FUNCTION                COL25800
 */                                                                     COL25810
                                                                        COL25820
                                                                        COL25830
         PUT STRING (OUTSTR) EDIT ('Fatal error # ',NUM) (A,F(2));      COL25840
         CALL LINEOUT;                                                  COL25850
         STOP;                                                          COL25860
         END;                                                           COL25870
                                                                        COL25880
 LINESKP: PROC;                                                         COL25890
                                                                        COL25900
 /* OUTPUTS A BLANK LINE */                                             COL25910
                                                                        COL25920
         OUTSTR=' ';                                                    COL25930
         CALL LINEOUT;                                                  COL25940
         RETURN;                                                        COL25950
         END;                                                           COL25960
                                                                        COL25970
 LINEOUT: PROC;                                                         COL25980
                                                                        COL25990
 /* OUTPUT A LINE TO MILTEN */                                          COL26000
                                                                        COL26010
         INSTR=OUTSTR;                                                  COL26020
         IF LOGON & OUTSTR ^= ' ' THEN                                  COL26030
              PUT SKIP EDIT (OUTSTR) (A);                               COL26040
         CCODE=0;                                                       COL26050
         DO WHILE (CCODE = 0);                                          COL26060
             CALL TWRITE(INSTR,LENGTH(OUTSTR),CCODE);                   COL26070
             END;                                                       COL26080
         RETURN;                                                        COL26090
         END;                                                           COL26100
                                                                        COL26110
 RAN: PROC (N) RETURNS (FIXED BIN(31));                                 COL26120
                                                                        COL26130
 /* RETURNS RANDOM NUMBER BETWEEN 0 AND N-1 */                          COL26140
                                                                        COL26150
         DCL N FIXED BIN(31);                                           COL26160
         DCL RANRTN FIXED BIN(31);                                      COL26170
                                                                        COL26180
         RANRTN=N;                                                      COL26190
         DO WHILE (RANRTN = N);                                         COL26200
             CALL RANDU(IX,IY,Y);                                       COL26210
             IX=IY;                                                     COL26220
             RANRTN=Y*N;                                                COL26230
             END;                                                       COL26240
         RETURN(RANRTN);                                                COL26250
         END;                                                           COL26260
                                                                        COL26270
                                                                        COL26280
   compress : proc (str) returns ( char(4095) varying ) ;               COL26290
                                                                        COL26300
 /*********************************************************************/COL26310
 /*  This function returns a varying string which differs from its    */COL26320
 /*  argument in that multiple blanks have been replaced with single  */COL26330
 /*  ones.                                                              COL26340
 /*********************************************************************/COL26350
                                                                        COL26360
   dcl  str        char(*)    varying  ,                                COL26370
        compressed char(4095) varying  ,                                COL26380
        ( i,j )    bin(15,0) ;                                          COL26390
                                                                        COL26400
   j = length( str )  ;                                                 COL26410
      if ( j = 0 ) then return('') ;                                    COL26420
      else not_null: do ;                                               COL26430
         compressed = substr( str,1,1 ) ;                               COL26440
         i = 1 ;                                                        COL26450
         do while ( i < j ) ;                                           COL26460
           i = i + 1 ;                                                  COL26470
             if ( ( substr( str, (i-1), 1 ) = ' ' )                     COL26480
                & ( substr( str, i, 1) = ' ' )    ) then ;              COL26490
             else  compressed = compressed || substr( str, i, 1 ) ;     COL26500
         end ;                                                          COL26510
      end not_null ;                                                    COL26520
      return ( compressed ) ;                                           COL26530
   end compress ;                                                       COL26540
                                                                        COL26550
                                                                        COL26560
   END COLOSSAL;                                                        COL26570